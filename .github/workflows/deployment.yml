name: ActivitySim to PyPI

on:
  release:
    types:
      - published
  push:
    tags:
      - 'v*'

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    if: github.repository == 'ActivitySim/activitysim'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools setuptools-scm wheel twine check-manifest
      - name: Build tarball and wheels
        run: |
          git clean -xdf
          git restore -SW .
          python -m build --sdist --wheel .
      - name: Check built artifacts
        run: |
          python -m twine check dist/*
          pwd
          if [ -f dist/activitysim-0.0.0.tar.gz ]; then
            echo "❌ INVALID VERSION NUMBER"
            exit 1
          else
            echo "✅ Looks good"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist
      - name: Verify the built dist/wheel is valid
        if: github.event_name == 'push'
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/activitysim*.whl
          python -m activitysim --version
      - name: Publish package to TestPyPI
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true

  docbuild:
    needs: test-built-dist
    if: github.event_name == 'release'
    name: ubuntu-latest py3.9
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.12"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install activitysim
        run: |
          uv sync --locked --dev
      - name: Build the docs
        run: |
          cd docs
          make clean
          make html
      - name: Push to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Token is created automatically by Github Actions, no other config needed
          publish_dir: ./docs/_build/html
          destination_dir: ${{ github.ref_name }}

  upload-to-pypi:
    needs: test-built-dist
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.13.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
