# orca injectables complicate matters because the decorators are executed at module load time
# and since py.test collects modules and loads them at the start of a run
# if a test method does something that has a lasting side-effect, then that side effect
# will carry over not just to subsequent test functions, but to subsequently called modules
# for instance, columns added with add_column will remain attached to orca tables
# pytest-xdist allows us to run py.test with the --boxed option which runs every function
# with a brand new python interpreter
language: python
sudo: false
python:
- '2.7'
install:
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then wget http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh
  -O miniconda.sh; else wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh
  -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- |
  conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION cytoolz numpy pandas pip pytables pyyaml toolz
- source activate test-environment
- pip install orca openmatrix zbox
- pip install pytest pytest-cov coveralls pep8 pytest-xdist
- pip install sphinx numpydoc
- pip install psutil
- pip install .
script:
- pep8 activitysim
- py.test --boxed --cov activitysim --cov-report term-missing
after_success:
- coveralls
- bin/build_docs.sh
notifications:
  slack:
    secure: Dpp+zBrnPGBHXrYWjwHy/bnHvhINfepSIiViwKfBZizBvTDvzSJfu6gCH+/lQ3squF3D4qTWwxB+LQ9V6KTYhuma8vQVisyneI6ARjUI/qgX6aJjuvmDDGPk6DVeDow7+aCLZ8VEHRhSjwy+dv0Ij0rxI6I94xPVwXUkk7ZjcK0=
env:
  global:
  # GH_TOKEN
  - secure: Lx7qJsqlshrmPWAZbYXOs0Pe0pvX1VyPuh22LPo8/7E7TqsMilps5U+0qp17Yg46CwzKgfnx+mrr0Emz2g7a2rj3VPeqsdSM2erOX/wuhKSOlqFNbzgD9CbuyaBdDdbLsuqrmOq8IZHWAOnHJoqn2L53rYl05mrN/PhZKN8M6O8=
