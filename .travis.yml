language: python
sudo: false
python:
  - '3.6'
  - '3.7'
  - '3.8'
install:
- wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
- bash miniconda.sh -b -p $HOME/miniconda
- source "$HOME/miniconda/etc/profile.d/conda.sh"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
- conda activate test-environment
- conda install pytest pytest-cov coveralls pycodestyle
- pip install .
- pip freeze
script:
# build 2 and 3 zone test data
- python activitysim/examples/example_multiple_zone/two_zone_example_data.py
- python activitysim/examples/example_multiple_zone/three_zone_example_data.py
- python /home/travis/miniconda/envs/test-environment/lib/python$TRAVIS_PYTHON_VERSION/site-packages/activitysim/examples/example_multiple_zone/two_zone_example_data.py
- python /home/travis/miniconda/envs/test-environment/lib/python$TRAVIS_PYTHON_VERSION/site-packages/activitysim/examples/example_multiple_zone/three_zone_example_data.py
- travis_wait 50 py.test activitysim\abm\models\util\test\test_cdap.py --durations=0
- travis_wait 50 py.test activitysim\abm\models\util\test\test_mandatory_tour_frequency.py --durations=0
- travis_wait 50 py.test activitysim\abm\models\util\test\test_non_mandatory_tour_frequency.py --durations=0
- travis_wait 50 py.test activitysim\abm\models\util\test\test_vectorize_tour_scheduling.py --durations=0
- travis_wait 50 py.test activitysim\abm\test\test_misc.py --durations=0
- travis_wait 50 py.test activitysim\abm\test\test_mp_pipeline.py --durations=0
- travis_wait 50 py.test activitysim\abm\test\test_multi_zone.py --durations=0
- travis_wait 50 py.test activitysim\abm\test\test_multi_zone_mp.py --durations=0
- travis_wait 50 py.test activitysim\abm\test\test_pipeline.py --durations=0
- travis_wait 50 py.test activitysim\cli\test\test_cli.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_assign.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_inject_defaults.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_input.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_logit.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_los.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_mergetables.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_orca.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_pipeline.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_random.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_simulate.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_skim.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_timetable.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_tracing.py --durations=0
- travis_wait 50 py.test activitysim\core\test\test_util.py --durations=0

after_success:
- coveralls
# Build docs
- pip install sphinx numpydoc sphinx_rtd_theme
- cd docs
- make clean
- make html
- touch _build/html/.nojekyll

deploy:
  provider: pages
  local_dir: docs/_build/html
  skip_cleanup: true
  github_token: $GH_TOKEN
  keep_history: true
  on:
    branch: master

notifications:
  slack:
    on_success: never # default: change
    on_failure: always # default: always
    secure: Dpp+zBrnPGBHXrYWjwHy/bnHvhINfepSIiViwKfBZizBvTDvzSJfu6gCH+/lQ3squF3D4qTWwxB+LQ9V6KTYhuma8vQVisyneI6ARjUI/qgX6aJjuvmDDGPk6DVeDow7+aCLZ8VEHRhSjwy+dv0Ij0rxI6I94xPVwXUkk7ZjcK0=
env:
  global:
   # GH_TOKEN ActivitySim/activitysim public_repo token
  - secure: WZeCAmI08hBRgtVWUlerfizvSpOVlBxQDa/Z6HJiDUlIXdSAOIi7TAwnluOgs3lHbSqACegbLCU9CyIQa/ytwmmuwzltkSQN14EcnKea0bXyygd8DFdx4x8st8M3a4nh2svgp4BDM9PCu6T1XIZ1rYM46JsKzNk9X8GpWOVN498=
