Description,Expression,DRIVEALONEFREE,DRIVEALONEPAY,SHARED2FREE,SHARED2PAY,SHARED3FREE,SHARED3PAY,WALK,BIKE,WALK_LOC,WALK_LRF,WALK_EXP,WALK_HVY,WALK_COM,DRIVE_LOC,DRIVE_LRF,DRIVE_EXP,DRIVE_HVY,DRIVE_COM,TAXI,TNC_SINGLE,TNC_SHARED
#Drive alone no toll,,,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - In-vehicle time,@c_ivt*odt_skims['SOV_TIME'],1,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Terminal time,@c_walktimeshort * df.total_terminal_time,1,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Operating cost,@df.c_cost * costPerMile * odt_skims['SOV_DIST'],1,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Parking cost,c_cost * total_parking_cost,1,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Bridge toll,@df.c_cost * odt_skims['SOV_BTOLL'],1,,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),1,,,,,,,,,,,,,,,,,,,,
#Drive alone toll,,,,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable,sovtoll_available == False,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for zero auto households,auto_ownership == 0,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for persons less than 16,age < 16,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for joint tours,is_joint == True,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,,-999,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - In-vehicle time,@c_ivt*odt_skims['SOVTOLL_TIME'],,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Operating cost,@df.c_cost * costPerMile * odt_skims['SOVTOLL_DIST'],,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Parking cost,c_cost * total_parking_cost,,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Bridge toll,@df.c_cost * odt_skims['SOVTOLL_BTOLL'],,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Value toll,@df.c_cost * odt_skims['SOVTOLL_VTOLL'],,1,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),,1,,,,,,,,,,,,,,,,,,,
#Shared ride 2,,,,,,,,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable,hov2_available == False,,,-999,,,,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,,-999,,,,,,,,,,,,,,,,,,
SHARED2FREE - In-vehicle time,@c_ivt * odt_skims['HOV2_TIME'],,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Terminal time,@c_walktimeshort * df.total_terminal_time,,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV2_DIST'],,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr2,,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Bridge toll,@df.c_cost * odt_skims['HOV2_BTOLL'] / costShareSr2,,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,1,,,,,,,,,,,,,,,,,,
SHARED2FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,1,,,,,,,,,,,,,,,,,,
#Shared ride 2 toll,,,,,,,,,,,,,,,,,,,,,,
SHARED2PAY - Unavailable,hov2toll_available == False,,,,-999,,,,,,,,,,,,,,,,,
SHARED2PAY - Unavailable based on party size,is_joint & (number_of_participants > 2),,,,-999,,,,,,,,,,,,,,,,,
SHARED2PAY - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'],,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV2TOLL_DIST'],,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr2,,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Bridge toll,@df.c_cost * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Value toll,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,1,,,,,,,,,,,,,,,,,
SHARED2PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,1,,,,,,,,,,,,,,,,,
#Shared ride 3+,,,,,,,,,,,,,,,,,,,,,,
SHARED3FREE - Unavailable,hov3_available == False,,,,,-999,,,,,,,,,,,,,,,,
SHARED3FREE - In-vehicle time,@c_ivt * odt_skims['HOV3_TIME'],,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV3_DIST'],,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Parking cost,@df.c_cost *  df.total_parking_cost / costShareSr3,,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Bridge toll,@df.c_cost * odt_skims['HOV3_BTOLL'] / costShareSr3,,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,1,,,,,,,,,,,,,,,,
SHARED3FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,1,,,,,,,,,,,,,,,,
#Shared ride 3+ toll,,,,,,,,,,,,,,,,,,,,,,
SHARED3PAY - Unavailable,hov3toll_available == False,,,,,,-999,,,,,,,,,,,,,,,
SHARED3PAY - In-vehicle time,@c_ivt * odt_skims['HOV3TOLL_TIME'],,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV3TOLL_DIST'],,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr3,,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Bridge toll,@df.c_cost * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Value toll,@df.c_cost * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,,1,,,,,,,,,,,,,,,
SHARED3PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,,1,,,,,,,,,,,,,,,
#Walk,,,,,,,,,,,,,,,,,,,,,,
WALK - Time up to 2 miles,@c_walktimeshort * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,,,,,,,1,,,,,,,,,,,,,,
WALK - Time beyond 2 of a miles,@c_walktimelong * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,,,,,,,1,,,,,,,,,,,,,,
WALK - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,1,,,,,,,,,,,,,,
WALK - Topology,@c_topology_walk * df.trip_topology,,,,,,,1,,,,,,,,,,,,,,
#Bike,,,,,,,,,,,,,,,,,,,,,,
BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,,,,-999,,,,,,,,,,,,,
BIKE - Time up to 6 miles,@c_biketimeshort * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,,,,,,,,1,,,,,,,,,,,,,
BIKE - Time beyond 6 of a miles,@c_biketimelong * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,,,,,,,,1,,,,,,,,,,,,,
BIKE - Destination zone densityIndex,@c_density_index*df.density_index,,,,,,,,1,,,,,,,,,,,,,
BIKE - Topology,@c_topology_bike * df.trip_topology,,,,,,,,1,,,,,,,,,,,,,
#Walk to Local,,,,,,,,,,,,,,,,,,,,,,
WALK_LOC - Unavailable,walk_local_available == False,,,,,,,,,-999,,,,,,,,,,,,
WALK_LOC - In-vehicle time,@c_ivt * odt_skims['WLK_LOC_WLK_TOTIVT']/100,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Short iwait time,@c_short_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Long iwait time,@c_long_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - transfer wait time,@c_xwait * odt_skims['WLK_LOC_WLK_XWAIT']/100,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - number of transfers,@c_xfers_wlk * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Walk access time,@c_wacc * df.origin_walk_time,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Walk egress time,@c_wegr * df.destination_walk_time,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Walk other time,@c_waux * odt_skims['WLK_LOC_WLK_WAUX']/100,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Fare,@df.c_cost * odt_skims['WLK_LOC_WLK_FAR'],,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,1,,,,,,,,,,,,
WALK_LOC - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,1,,,,,,,,,,,,
#Walk to Light rail/Ferry,,,,,,,,,,,,,,,,,,,,,,
WALK_LRF - Unavailable,walk_lrf_available == False,,,,,,,,,,-999,,,,,,,,,,,
WALK_LRF - In-vehicle time,@c_ivt * odt_skims['WLK_LRF_WLK_TOTIVT']/100,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - In-vehicle time on Light Rail (incremental w/ ivt),@(c_ivt_lrt-c_ivt) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - In-vehicle time on Ferry (incremental w/keyivt),@(c_ivt_ferry-c_ivt_lrt) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Short iwait time,@c_short_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Long iwait time,@c_long_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - transfer wait time,@c_xwait * odt_skims['WLK_LRF_WLK_XWAIT']/100,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - number of transfers,@c_xfers_wlk * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Walk access time,@c_wacc * df.origin_walk_time,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Walk egress time,@c_wegr * df.destination_walk_time,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Walk otherLight rail/Ferry time,@c_waux * odt_skims['WLK_LRF_WLK_WAUX']/100,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Fare,@df.c_cost * odt_skims['WLK_LRF_WLK_FAR'],,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,1,,,,,,,,,,,
WALK_LRF - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,1,,,,,,,,,,,
#Walk to Express bus,,,,,,,,,,,,,,,,,,,,,,
WALK_EXP - Unavailable,walk_express_available == False,,,,,,,,,,,-999,,,,,,,,,,
WALK_EXP - In-vehicle time,@c_ivt * odt_skims['WLK_EXP_WLK_TOTIVT']/100,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - In-vehicle time on Express bus (incremental w/ ivt),@(c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Short iwait time,@c_short_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Long iwait time,@c_long_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - transfer wait time,@c_xwait * odt_skims['WLK_EXP_WLK_XWAIT']/100,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - number of transfers,@c_xfers_wlk * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Walk access time,@c_wacc * df.origin_walk_time,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Walk egress time,@c_wegr * df.destination_walk_time,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Walk other time,@c_waux * odt_skims['WLK_EXP_WLK_WAUX']/100,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Fare,@df.c_cost * odt_skims['WLK_EXP_WLK_FAR'],,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,1,,,,,,,,,,
WALK_EXP - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,,1,,,,,,,,,,
#Walk to Heavy Rail,,,,,,,,,,,,,,,,,,,,,,
WALK_HVY - Unavailable,walk_heavyrail_available == False,,,,,,,,,,,,-999,,,,,,,,,
WALK_HVY - In-vehicle time,@c_ivt * odt_skims['WLK_HVY_WLK_TOTIVT']/100,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - In-vehicle time on heavy rail (incremental w/ ivt),@(c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Short iwait time,@c_short_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Long iwait time,@c_long_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - transfer wait time,@c_xwait * odt_skims['WLK_HVY_WLK_XWAIT']/100,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - number of transfers,@c_xfers_wlk * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Walk access time,@c_wacc * df.origin_walk_time,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Walk egress time,@c_wegr * df.destination_walk_time,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Walk other time,@c_waux * odt_skims['WLK_HVY_WLK_WAUX']/100,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Fare,@df.c_cost * odt_skims['WLK_HVY_WLK_FAR'],,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,1,,,,,,,,,
WALK_HVY - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,,,1,,,,,,,,,
#Walk to Commuter rail,,,,,,,,,,,,,,,,,,,,,,
WALK_COM - Unavailable,walk_commuter_available == False,,,,,,,,,,,,,-999,,,,,,,,
WALK_COM - In-vehicle time,@c_ivt * odt_skims['WLK_COM_WLK_TOTIVT']/100,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(c_ivt_com-c_ivt) * odt_skims['WLK_COM_WLK_KEYIVT']/100,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Short iwait time,@c_short_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Long iwait time,@c_long_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,1,,,,,,,,
WALK_COM - transfer wait time,@c_xwait * odt_skims['WLK_COM_WLK_XWAIT']/100,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - number of transfers,@c_xfers_wlk * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Walk access time,@c_wacc * df.origin_walk_time,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Walk egress time,@c_wegr * df.destination_walk_time,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Walk other time,@c_waux * odt_skims['WLK_COM_WLK_WAUX']/100,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Fare,@df.c_cost * odt_skims['WLK_COM_WLK_FAR'],,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,1,,,,,,,,
WALK_COM - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,1,,,,,,,,
#Drive to Local,,,,,,,,,,,,,,,,,,,,,,
DRIVE_LOC - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Unavailable,outbound & ~drive_local_available_outbound,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC outbound - In-vehicle time,@df.outbound * c_ivt * odt_skims['DRV_LOC_WLK_TOTIVT']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Short iwait time,@df.outbound * c_short_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Long iwait time,@df.outbound * c_long_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - transfer wait time,@df.outbound * c_xwait * odt_skims['DRV_LOC_WLK_XWAIT']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - number of transfers,@df.outbound * c_xfers_wlk * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_LOC_WLK_DTIM']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Walk egress time,@df.outbound * c_wegr * df.destination_walk_time,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Walk other time,@df.outbound * c_waux * odt_skims['DRV_LOC_WLK_WAUX']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Fare and operating cost,@df.outbound * df.c_cost * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC outbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Unavailable,inbound & ~drive_local_available_inbound,,,,,,,,,,,,,,-999,,,,,,,
DRIVE_LOC inbound - In-vehicle time,@df.inbound * c_ivt * odt_skims['WLK_LOC_DRV_TOTIVT']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Short iwait time,@df.inbound * c_short_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Long iwait time,@df.inbound * c_long_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - transfer wait time,@df.inbound * c_xwait * odt_skims['WLK_LOC_DRV_XWAIT']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - number of transfers,@df.inbound * c_xfers_wlk * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Drive time,@df.inbound * c_dtim * odt_skims['WLK_LOC_DRV_DTIM']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Walk access time,@df.inbound * c_wacc * df.origin_walk_time,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Walk other time,@df.inbound * c_waux * odt_skims['WLK_LOC_DRV_WAUX']/100,,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Fare and operating cost,@df.inbound * df.c_cost * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),,,,,,,,,,,,,,1,,,,,,,
DRIVE_LOC inbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),,,,,,,,,,,,,,1,,,,,,,
#Drive to Light Rail/Ferry,,,,,,,,,,,,,,,,,,,,,,
DRIVE_LRF - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF  - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF  - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF  - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Unavailable,outbound & ~drive_lrf_available_outbound,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF outbound - In-vehicle time,@df.outbound * c_ivt * odt_skims['DRV_LRF_WLK_TOTIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - In-vehicle time on Light Rail (incremental w/ ivt),@df.outbound * (c_ivt_lrt-c_ivt)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - In-vehicle time on Ferry (incremental w/ keyivt),@df.outbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Short iwait time,@df.outbound * c_short_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Long iwait time,@df.outbound * c_long_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - transfer wait time,@df.outbound * c_xwait * odt_skims['DRV_LRF_WLK_XWAIT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - number of transfers,@df.outbound * c_xfers_drv * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_LRF_WLK_DTIM']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Walk egress time,@df.outbound * c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Walk other time,@df.outbound * c_waux * odt_skims['DRV_LRF_WLK_WAUX']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Fare and operating cost,@df.outbound * df.c_cost * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF outbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Unavailable,inbound & ~drive_lrf_available_inbound,,,,,,,,,,,,,,,-999,,,,,,
DRIVE_LRF inbound - In-vehicle time,@df.inbound * c_ivt * odt_skims['WLK_LRF_DRV_TOTIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - In-vehicle time on Light Rail (incremental w/ ivt),@df.inbound * (c_ivt_lrt-c_ivt)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - In-vehicle time on Ferry (incremental w/ keyivt),@df.inbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Short iwait time,@df.inbound * c_short_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Long iwait time,@df.inbound * c_long_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - transfer wait time,@df.inbound * c_xwait * odt_skims['WLK_LRF_DRV_XWAIT']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - number of transfers,@df.inbound * c_xfers_drv * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Drive time,@df.inbound * c_dtim * odt_skims['WLK_LRF_DRV_DTIM']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Walk access time,@df.inbound * c_wacc * df.origin_walk_time,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Walk other time,@df.inbound * c_waux * odt_skims['WLK_LRF_DRV_WAUX']/100,,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Fare and operating cost,@df.inbound * df.c_cost * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),,,,,,,,,,,,,,,1,,,,,,
DRIVE_LRF inbound - Ratio of drive access distance to OD distance,@df.inbound * c_dacc_ratio * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],,,,,,,,,,,,,,,1,,,,,,
#Drive to Express bus,,,,,,,,,,,,,,,,,,,,,,
DRIVE_EXP - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Unavailable,outbound & ~drive_express_available_outbound,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP outbound - In-vehicle time,@df.outbound * c_ivt * odt_skims['DRV_EXP_WLK_TOTIVT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - In-vehicle time on Express bus (incremental w/ ivt),@df.outbound * (c_ivt_exp-c_ivt) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Short iwait time,@df.outbound * c_short_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Long iwait time,@df.outbound * c_long_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - transfer wait time,@df.outbound * c_xwait * odt_skims['DRV_EXP_WLK_XWAIT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - number of transfers,@df.outbound * c_xfers_drv * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_EXP_WLK_DTIM']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Walk egress ime,@df.outbound * c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Walk other time,@df.outbound * c_waux * odt_skims['DRV_EXP_WLK_WAUX']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Fare and operating cost,@df.outbound * df.c_cost * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP outbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Unavailable,inbound & ~drive_express_available_inbound,,,,,,,,,,,,,,,,-999,,,,,
DRIVE_EXP inbound - In-vehicle time,@df.inbound * c_ivt * odt_skims['WLK_EXP_DRV_TOTIVT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - In-vehicle time on Express bus (incremental w/ ivt),@df.inbound * (c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Short iwait time,@df.inbound * c_short_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Long iwait time,@df.inbound * c_long_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - transfer wait time,@df.inbound * c_xwait * odt_skims['WLK_EXP_DRV_XWAIT']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - number of transfers,@df.inbound * c_xfers_drv * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Drive time,@df.inbound * c_dtim * odt_skims['WLK_EXP_DRV_DTIM']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Walk access time,@df.inbound * c_wacc * df.origin_walk_time,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Walk other time,@df.inbound * c_waux * odt_skims['WLK_EXP_DRV_WAUX']/100,,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Fare and operating cost,@df.inbound * df.c_cost * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),,,,,,,,,,,,,,,,1,,,,,
DRIVE_EXP inbound - Ratio of drive access distance to OD distance,@df.inbound * c_dacc_ratio * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,1,,,,,
#Drive to Heavy Rail,,,,,,,,,,,,,,,,,,,,,,
DRIVE_HVY - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Unavailable,outbound & ~drive_heavyrail_available_outbound,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY outbound - In-vehicle time,@df.outbound * c_ivt * odt_skims['DRV_HVY_WLK_TOTIVT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - In-vehicle time on heavy rail (incremental w/ ivt),@df.outbound * (c_ivt_hvy-c_ivt) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Short iwait time,@df.outbound * c_short_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Long iwait time,@df.outbound * c_long_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - transfer wait time,@df.outbound * c_xwait * odt_skims['DRV_HVY_WLK_XWAIT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - number of transfers,@df.outbound * c_xfers_drv * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Walk egress time,@df.outbound * c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Walk other time,@df.outbound * c_waux * odt_skims['DRV_HVY_WLK_WAUX']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Fare and operating cost,@df.outbound * df.c_cost * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY outbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Unavailable,inbound & ~drive_heavyrail_available_inbound,,,,,,,,,,,,,,,,,-999,,,,
DRIVE_HVY inbound - In-vehicle time,@df.inbound * c_ivt * odt_skims['WLK_HVY_DRV_TOTIVT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - In-vehicle time on heavy rail (incremental w/ ivt),@df.inbound * (c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Short iwait time,@df.inbound * c_short_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Long iwait time,@df.inbound * c_long_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - transfer wait time,@df.inbound * c_xwait * odt_skims['WLK_HVY_DRV_XWAIT']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - number of transfers,@df.inbound * c_xfers_drv * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Walk access time,@df.inbound * c_wacc * df.origin_walk_time,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Walk other time,@c_waux * odt_skims['WLK_HVY_DRV_WAUX']/100,,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Fare and operating cost,@df.inbound * df.c_cost * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),,,,,,,,,,,,,,,,,1,,,,
DRIVE_HVY inbound - Ratio of drive access distance to OD distance,@df.inbound * c_dacc_ratio * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],,,,,,,,,,,,,,,,,1,,,,
#Drive to Commuter Rail,,,,,,,,,,,,,,,,,,,,,,
DRIVE_COM - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Unavailable,outbound & ~drive_commuter_available_outbound,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM outbound - In-vehicle time,@df.outbound * c_ivt * odt_skims['DRV_COM_WLK_TOTIVT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - In-vehicle time on commuter rail (incremental w/ ivt),@df.outbound * (c_ivt_com-c_ivt) * odt_skims['DRV_COM_WLK_KEYIVT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Short iwait time,@df.outbound * c_short_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Long iwait time,@df.outbound * c_long_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - transfer wait time,@df.outbound * c_xwait * odt_skims['DRV_COM_WLK_XWAIT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - number of transfers,@df.outbound * c_xfers_drv * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Drive time,@df.outbound * c_dtim * odt_skims['DRV_COM_WLK_DTIM']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Walk egress time,@df.outbound * c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Walk other time,@df.outbound * c_waux * odt_skims['DRV_COM_WLK_WAUX']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Fare and operating cost,@df.outbound * df.c_cost * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM outbound - Ratio of drive access distance to OD distance,@df.outbound * c_dacc_ratio * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Unavailable,inbound & ~drive_commuter_available_inbound,,,,,,,,,,,,,,,,,,-999,,,
DRIVE_COM inbound - In-vehicle time,@df.inbound * c_ivt * odt_skims['WLK_COM_DRV_TOTIVT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - In-vehicle time on commuter rail (incremental w/ ivt),@df.inbound * (c_ivt_com-c_ivt) * odt_skims['WLK_COM_DRV_KEYIVT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Short iwait time,@df.inbound * c_short_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Long iwait time,@df.inbound * c_long_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - transfer wait time,@df.inbound * c_xwait * odt_skims['WLK_COM_DRV_XWAIT']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - number of transfers,@df.inbound * c_xfers_drv * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Drive time,@df.inbound * c_dtim * odt_skims['WLK_COM_DRV_DTIM']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Walk access time,@df.inbound * c_wacc * df.origin_walk_time,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Walk other time,@df.inbound * c_waux * odt_skims['WLK_COM_DRV_WAUX']/100,,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Fare and operating cost,@df.inbound * df.c_cost * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),,,,,,,,,,,,,,,,,,1,,,
DRIVE_COM inbound - Ratio of drive access distance to OD distance,@df.inbound * c_dacc_ratio * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,,,1,,,
#Taxi,,,,,,,,,,,,,,,,,,,,,,
Taxi - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'],,,,,,,,,,,,,,,,,,,1,,
Taxi - Wait time,@c_ivt * 1.5 * df.origTaxiWaitTime,,,,,,,,,,,,,,,,,,,1,,
Taxi - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,,,,,,,,,1,,
Taxi - Bridge toll,@df.c_cost * odt_skims['HOV2TOLL_BTOLL'],,,,,,,,,,,,,,,,,,,1,,
Taxi - Fare,@df.c_cost * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,,,,,,,,,,,,,,,,,,,1,,
#TNC Single,,,,,,,,,,,,,,,,,,,,,,
TNC Single - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'] ,,,,,,,,,,,,,,,,,,,,1,
TNC Single - Wait time,@c_ivt * 1.5 * df.origSingleTNCWaitTime,,,,,,,,,,,,,,,,,,,,1,
TNC Single - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,,,,,,,,,,1,
TNC Single - Bridge toll,@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,,,,,,,,1,
TNC Single - Cost,"@df.c_cost * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",,,,,,,,,,,,,,,,,,,,1,
#TNC Shared,,,,,,,,,,,,,,,,,,,,,,
TNC Shared - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,,,,,,,,,,,,,,,,,,,,,1
TNC Shared - Wait time,@c_ivt  * 1.5 * df.origSharedTNCWaitTime,,,,,,,,,,,,,,,,,,,,,1
TNC Shared - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,,,,,,,,,,,1
TNC Shared - Bridge toll,@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,,,,,,,,,1
TNC Shared - Cost,"@df.c_cost * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",,,,,,,,,,,,,,,,,,,,,1
#,,,,,,,,,,,,,,,,,,,,,,
Auto tour mode availability,tour_mode_is_auto,,,,,,,,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,,,
Walk tour mode availability,tour_mode_is_walk,-999,-999,-999,-999,-999,-999,,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,,,
Bike tour mode availability,tour_mode_is_bike,-999,-999,-999,-999,-999,-999,,,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,,,
Walk to Transit tour mode availability,tour_mode_is_walk_transit,-999,-999,,,,,,-999,,,,,,-999,-999,-999,-999,-999,,,
Drive to Transit tour modes availability,tour_mode_is_drive_transit,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,,,,,,,,
Ride hail tour modes availability,tour_mode_is_ride_hail,-999,-999,,,,,,-999,,,,,,-999,-999,-999,-999,-999,,,
#indiv tour ASCs,,,,,,,,,,,,,,,,,,,,,,
Drive Alone tour mode ASC -- shared ride 2,@sov_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,1,1,,,,,,,,,,,,,,,,,
Drive Alone tour mode ASC -- shared ride 3+,@sov_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,1,1,,,,,,,,,,,,,,,
Drive Alone tour mode ASC -- walk,@sov_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,,,1,,,,,,,,,,,,,,
Drive Alone tour mode ASC -- ride hail,@sov_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,,,,,,,,,,,,,,,1,1,1
Shared Ride 2 tour mode ASC -- shared ride 2,@sr2_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,1,1,,,,,,,,,,,,,,,,,
Shared Ride 2 tour mode ASC -- shared ride 3+,@sr2_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,1,1,,,,,,,,,,,,,,,
Shared Ride 2 tour mode ASC -- walk,@sr2_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,,,1,,,,,,,,,,,,,,
Shared Ride 2 tour mode ASC -- ride hail,@sr2_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,,,,,,,,,,,,,,,1,1,1
Shared Ride 3+ tour mode ASC -- shared ride 2,@sr3p_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,1,1,,,,,,,,,,,,,,,,,
Shared Ride 3+ tour mode ASC -- shared ride 3+,@sr3p_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,1,1,,,,,,,,,,,,,,,
Shared Ride 3+ tour mode ASC -- walk,@sr3p_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,,,1,,,,,,,,,,,,,,
Shared Ride 3+ tour mode ASC -- ride hail,@sr3p_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,,,,,,,,,,,,,,,1,1,1
Walk tour mode ASC -- ride hail,@walk_ASC_rh * df.is_indiv * (df.i_tour_mode == I_WALK_MODE),,,,,,,,,,,,,,,,,,,1,1,1
Bike tour mode ASC -- walk,@bike_ASC_walk * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),,,,,,,1,,,,,,,,,,,,,,
Bike tour mode ASC -- ride hail,@bike_ASC_rh * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,,,,,,,,,,1,1,1
Walk to Transit tour mode ASC -- light rail,@walk_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),,,,,,,,,,1,,,,,,,,,,,
Walk to Transit tour mode ASC -- ferry,@walk_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),,,,,,,,,,1,,,,,,,,,,,
Walk to Transit tour mode ASC -- express bus,@walk_transit_ASC_express * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,1,,,,,,,,,,
Walk to Transit tour mode ASC -- heavy rail,@walk_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,1,,,,,,,,,
Walk to Transit tour mode ASC -- commuter rail,@walk_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,,1,,,,,,,,
Walk to Transit tour mode ASC -- shared ride 2,@walk_transit_ASC_sr2 * (df.is_indiv & df.tour_mode_is_walk_transit),,,1,1,,,,,,,,,,,,,,,,,
Walk to Transit tour mode ASC -- shared ride 3+,@walk_transit_ASC_sr3p * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,1,1,,,,,,,,,,,,,,,
Walk to Transit tour mode ASC -- walk,@walk_transit_ASC_walk * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,1,,,,,,,,,,,,,,
Walk to Transit tour mode ASC -- ride hail,@walk_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,,,,,,,,1,1,1
Drive to Transit tour mode ASC -- light rail (higher b/c loc d-trn skims differ),@drive_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),,,,,,,,,,,,,,,1,,,,,,
Drive to Transit tour mode ASC -- ferry,@drive_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),,,,,,,,,,,,,,,1,,,,,,
Drive to Transit tour mode ASC -- express bus,@drive_transit_ASC_express * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,1,,,,,
Drive to Transit tour mode ASC -- heavy rail,@drive_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,1,,,,
Drive to Transit tour mode ASC -- commuter rail,@drive_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,,1,,,
Drive to Transit tour mode ASC -- ride hail,@drive_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,,,1,1,1
Ride Hail tour mode ASC -- shared ride 2,@ride_hail_ASC_sr2 * (df.is_indiv & df.tour_mode_is_ride_hail),,,1,1,,,,,,,,,,,,,,,,,
Ride Hail tour mode ASC -- shared ride 3+,@ride_hail_ASC_sr3p * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,1,1,,,,,,,,,,,,,,,
Ride Hail tour mode ASC -- walk,@ride_hail_ASC_walk * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,,,1,,,,,,,,,,,,,,
Ride Hail tour mode ASC -- walk to transit,@ride_hail_ASC_walk_transit * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,,,,,1,1,1,1,1,,,,,,,,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_taxi * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,1,,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_tnc_single * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,,1,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_tnc_shared * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,,,1
#joint tour ASCs,,,,,,,,,,,,,,,,,,,,,,
joint - auto tour mode ASC -- shared ride 2,@joint_auto_ASC_sr2 * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,1,1,,,,,,,,,,,,,,,,,
joint - auto tour mode ASC -- shared ride 3+,@joint_auto_ASC_sr3p * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,1,1,,,,,,,,,,,,,,,
joint - auto tour mode ASC -- walk,@joint_auto_ASC_walk * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,,,1,,,,,,,,,,,,,,
joint - auto tour mode ASC -- ride hail,@joint_auto_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,1,1,1
joint - Walk tour mode ASC -- ride hail,@joint_walk_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,1,,,,,,,,,,,,,,
joint - Bike tour mode ASC -- walk,@joint_bike_ASC_walk * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),,,,,,,1,,,,,,,,,,,,,,
joint - Bike tour mode ASC -- ride hail,@joint_bike_ASC_rh * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,,,,,,,,,,1,1,1
joint - Walk to Transit tour mode ASC -- light rail,@joint_walk_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),,,,,,,,,,1,,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- ferry,@joint_walk_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),,,,,,,,,,1,,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- express bus,@joint_walk_transit_ASC_express * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,1,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- heavy rail,@joint_walk_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,1,,,,,,,,,
joint - Walk to Transit tour mode ASC -- commuter rail,@joint_walk_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,,1,,,,,,,,
joint - Walk to Transit tour mode ASC -- shared ride 2,@joint_walk_transit_ASC_sr2 * (df.is_joint & df.tour_mode_is_walk_transit),,,1,1,,,,,,,,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- shared ride 3+,@joint_walk_transit_ASC_sr3p * (df.is_joint & df.tour_mode_is_walk_transit),,,,,1,1,,,,,,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- walk,@joint_walk_transit_ASC_walk * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,1,,,,,,,,,,,,,,
joint - Walk to Transit tour mode ASC -- ride hail,@joint_walk_transit_ASC_rh * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,,,,,,,,1,1,1
joint - Drive to Transit tour mode ASC -- light rail (higher b/c loc d-trn skims differ),@joint_drive_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),,,,,,,,,,,,,,,1,,,,,,
joint - Drive to Transit tour mode ASC -- ferry,@joint_drive_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),,,,,,,,,,,,,,,1,,,,,,
joint - Drive to Transit tour mode ASC -- express bus,@joint_drive_transit_ASC_express * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,1,,,,,
joint - Drive to Transit tour mode ASC -- heavy rail,@joint_drive_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,1,,,,
joint - Drive to Transit tour mode ASC -- commuter rail,@joint_drive_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,,1,,,
joint - Drive to Transit tour mode ASC -- ride hail,@joint_drive_transit_ASC_rh * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,,,,,,,1,1,1
joint - Ride Hail tour mode ASC -- shared ride 2,@joint_ride_hail_ASC_sr2 * (df.is_joint & df.tour_mode_is_ride_hail),,,1,1,,,,,,,,,,,,,,,,,
joint - Ride Hail tour mode ASC -- shared ride 3+,@joint_ride_hail_ASC_sr3p * (df.is_joint & df.tour_mode_is_ride_hail),,,,,1,1,,,,,,,,,,,,,,,
joint - Ride Hail tour mode ASC -- walk,@joint_ride_hail_ASC_walk * (df.is_joint & df.tour_mode_is_ride_hail),,,,,,,1,,,,,,,,,,,,,,
joint - Ride Hail tour mode ASC -- walk to transit,@joint_ride_hail_ASC_walk_transit * (df.is_joint & df.tour_mode_is_ride_hail),,,,,,,,,1,1,1,1,1,,,,,,,,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_taxi * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,1,,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_tnc_single * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,,1,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_tnc_shared * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,,,,,,,,,1
#,,,,,,,,,,,,,,,,,,,,,,
Walk not available for long distances,@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),,,,,,,-999,,,,,,,,,,,,,,
Bike not available for long distances,@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),,,,,,,,-999,,,,,,,,,,,,,
Origin density index,@(c_origin_density_index*df.origin_density_index).clip(c_origin_density_index_max) if origin_density_applied else 0,,,,,,,1,1,1,1,1,1,1,,,,,,,1,1
Walk-express penalty for intermediate stops,@c_walk_express_penalty * ~(df.first_trip | df.first_trip),,,,,,,,,,,1,,,,,,,,,,
TNC shared adjustment,@adjust_tnc_shared,,,,,,,,,,,,,,,,,,,,,1