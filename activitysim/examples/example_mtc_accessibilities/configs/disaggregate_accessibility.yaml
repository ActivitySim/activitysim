
# Specify the tables to be created and  their variables.
# Single values are constants
# Lists are varying and will generate the cartesian product (i.e., all possible non-repeating combinations)

# Example result for households below:
#hhid   veh hinccat1    hinc    hworkers    persons hht  bldgsz
# 1     0   1           14000   1           2       1    2
# 2     1   1           14000   1           2       1    2
# 3     2   1           14000   1           2       1    2
# 4     0   2           67000   1           2       1    2
# 5     1   2           67000   1           2       1    2
# 6     2   2           67000   1           2       1    2
# ....

#Note: parameters in ALL CAPS below are required by the program for synthesis
CREATE_TABLES:
    HOUSEHOLDS:
        index_col: household_id
        zone_col: home_zone_id
        rename_columns:
          zone_id: home_zone_id
        VARIABLES:
            hinccat1: [1, 2, 3]          # Income categories
            hworkers: 1                  # Household workers
            veh: [0, 1, 2]               # Household vehicles
            persons: 2                   # Two persons household
            HHT: 1                       # Married-couple family household
            bldgsz: 2                    # Building size - Single family detached
        # Additional columns that are mapped to another (e.g., hhinccat1: 1 = hinc: 14000)
        mapped_fields:
            hinccat1: # List new fields mapped to this field
              income: # Median income within each quartile
                1: 14000
                2: 67000
                3: 120000
            persons:
              hhsize:
                1: 1
                2: 2
                3: 3
            hworkers:
              num_workers:
                1: 1
                2: 2
                3: 3
                    
    PERSONS:
        index_col: person_id
        VARIABLES:
            pnum: [1, 2]                # Person number
            military: 4                 # Not military
            pstudent: 3                 # Not attending school
            educ: 13                    # Bachelor's
            grade: 0                    # Not attending
            timeFactorWork: 1           # mean
            timeFactorNonWork: 1        # mean
        mapped_fields:
            pnum:
                age:
                    1: 35
                    2: 55
                sex: # Female male
                    1: 2
                    2: 1
                ptype: # Person type, full-time and non-working adult
                    1: 1
                    2: 4
                pemploy: # Full-time and unemployed
                    1: 1
                    2: 3
                weeks: # 50-52 weeks, none
                    1: 1
                    2: 0
                hours: # Hours per week
                    1: 35
                    2: 0
                DAP: # Mandatory, Non-mandatory
                    1: "M"
                    2: "N"

    TOURS:
        index_col: tour_id
        VARIABLES:
            person_num: [1, 2, 2]       # person number
            tour_num: 1                 # Tour number
        mapped_fields:
            person_num:
                purpose:  # purpose
                    1: "work"
                    2: "shopping"
                    3: "othdiscr"
        JOIN_ON:
            person_num: pnum            # Specifies which person variable to join the tours on



### 2 or 3 zone system
zones:
    - zone_id
    # - county_id



    
    
# Include any annotations for persons, households, land_use, or tours.
# The purpose of a separate annotation setup is that annotation expressions for the main model
# may require data that aren't in the proto population.
# This step enables users to annotate the proto-population by referencing custom annotation scripts.
# Of course, users can also just reference existing configs if they work, but they must be referenced here too.

annotate_proto_tables:
  - tablename: persons
    annotate:
      SPEC: annotate_persons
      DF: persons
      TABLES:
        - households

#  - tablename: households
#    annotate:
#      SPEC: annotate_proto_households
#      DF: households
#      TABLES:
#        - persons
#        - land_use

  - tablename: households
    annotate:
      SPEC: annotate_households
      DF: households
      TABLES:
        - persons
        - land_use

  - tablename: persons
    annotate:
      SPEC: annotate_persons_after_hh
      DF: persons
      TABLES:
        - households



### zone to zone crosswalk file
# maz: maz_taz.csv

### Destination sample size
# sample_size: