Description,Expression,DRIVEALONEFREE,DRIVEALONEPAY,SHARED2FREE,SHARED2PAY,SHARED3FREE,SHARED3PAY,WALK,BIKE,WALK_TRANSIT,DRIVE_TRANSIT,TAXI,TNC_SINGLE,TNC_SHARED
#Drive alone no toll,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,,,
DRIVEALONEFREE - In-vehicle time,@c_ivt*odt_skims['SOV_TIME'],1,,,,,,,,,,,,
DRIVEALONEFREE - Terminal time,@c_walktimeshort * df.total_terminal_time,1,,,,,,,,,,,,
DRIVEALONEFREE - Operating cost,@df.c_cost * costPerMile * odt_skims['SOV_DIST'],1,,,,,,,,,,,,
DRIVEALONEFREE - Parking cost,c_cost * total_parking_cost,1,,,,,,,,,,,,
DRIVEALONEFREE - Bridge toll,@df.c_cost * odt_skims['SOV_BTOLL'],1,,,,,,,,,,,,
DRIVEALONEFREE - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),1,,,,,,,,,,,,
#Drive alone toll,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable,sovtoll_available == False,,-999,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for zero auto households,auto_ownership == 0,,-999,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for persons less than 16,age < 16,,-999,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for joint tours,is_joint == True,,-999,,,,,,,,,,,
DRIVEALONEPAY - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,,-999,,,,,,,,,,,
DRIVEALONEPAY - In-vehicle time,@c_ivt*odt_skims['SOVTOLL_TIME'],,1,,,,,,,,,,,
DRIVEALONEPAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,1,,,,,,,,,,,
DRIVEALONEPAY - Operating cost,@df.c_cost * costPerMile * odt_skims['SOVTOLL_DIST'],,1,,,,,,,,,,,
DRIVEALONEPAY - Parking cost,c_cost * total_parking_cost,,1,,,,,,,,,,,
DRIVEALONEPAY - Bridge toll,@df.c_cost * odt_skims['SOVTOLL_BTOLL'],,1,,,,,,,,,,,
DRIVEALONEPAY - Value toll,@df.c_cost * odt_skims['SOVTOLL_VTOLL'],,1,,,,,,,,,,,
DRIVEALONEPAY - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),,1,,,,,,,,,,,
#Shared ride 2,,,,,,,,,,,,,,
SHARED2FREE - Unavailable,hov2_available == False,,,-999,,,,,,,,,,
SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,,-999,,,,,,,,,,
SHARED2FREE - In-vehicle time,@c_ivt * odt_skims['HOV2_TIME'],,,1,,,,,,,,,,
SHARED2FREE - Terminal time,@c_walktimeshort * df.total_terminal_time,,,1,,,,,,,,,,
SHARED2FREE - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV2_DIST'],,,1,,,,,,,,,,
SHARED2FREE - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr2,,,1,,,,,,,,,,
SHARED2FREE - Bridge toll,@df.c_cost * odt_skims['HOV2_BTOLL'] / costShareSr2,,,1,,,,,,,,,,
SHARED2FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,1,,,,,,,,,,
SHARED2FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,1,,,,,,,,,,
SHARED2FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,1,,,,,,,,,,
#Shared ride 2 toll,,,,,,,,,,,,,,
SHARED2PAY - Unavailable,hov2toll_available == False,,,,-999,,,,,,,,,
SHARED2PAY - Unavailable based on party size,is_joint & (number_of_participants > 2),,,,-999,,,,,,,,,
SHARED2PAY - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'],,,,1,,,,,,,,,
SHARED2PAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,1,,,,,,,,,
SHARED2PAY - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV2TOLL_DIST'],,,,1,,,,,,,,,
SHARED2PAY - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr2,,,,1,,,,,,,,,
SHARED2PAY - Bridge toll,@df.c_cost * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,,,,1,,,,,,,,,
SHARED2PAY - Value toll,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,,,,1,,,,,,,,,
SHARED2PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,1,,,,,,,,,
SHARED2PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,1,,,,,,,,,
SHARED2PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,1,,,,,,,,,
#Shared ride 3+,,,,,,,,,,,,,,
SHARED3FREE - Unavailable,hov3_available == False,,,,,-999,,,,,,,,
SHARED3FREE - In-vehicle time,@c_ivt * odt_skims['HOV3_TIME'],,,,,1,,,,,,,,
SHARED3FREE - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,,1,,,,,,,,
SHARED3FREE - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV3_DIST'],,,,,1,,,,,,,,
SHARED3FREE - Parking cost,@df.c_cost *  df.total_parking_cost / costShareSr3,,,,,1,,,,,,,,
SHARED3FREE - Bridge toll,@df.c_cost * odt_skims['HOV3_BTOLL'] / costShareSr3,,,,,1,,,,,,,,
SHARED3FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,1,,,,,,,,
SHARED3FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,1,,,,,,,,
SHARED3FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,1,,,,,,,,
#Shared ride 3+ toll,,,,,,,,,,,,,,
SHARED3PAY - Unavailable,hov3toll_available == False,,,,,,-999,,,,,,,
SHARED3PAY - In-vehicle time,@c_ivt * odt_skims['HOV3TOLL_TIME'],,,,,,1,,,,,,,
SHARED3PAY - Terminal time,@c_walktimeshort * df.total_terminal_time,,,,,,1,,,,,,,
SHARED3PAY - Operating cost,@df.c_cost * costPerMile * odt_skims['HOV3TOLL_DIST'],,,,,,1,,,,,,,
SHARED3PAY - Parking cost,@df.c_cost * df.total_parking_cost / costShareSr3,,,,,,1,,,,,,,
SHARED3PAY - Bridge toll,@df.c_cost * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,,,,,,1,,,,,,,
SHARED3PAY - Value toll,@df.c_cost * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,,,,,,1,,,,,,,
SHARED3PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,,1,,,,,,,
SHARED3PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,,1,,,,,,,
SHARED3PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,,1,,,,,,,
#Walk,,,,,,,,,,,,,,
WALK - Time up to 2 miles,@c_walktimeshort * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,,,,,,,1,,,,,,
WALK - Time beyond 2 of a miles,@c_walktimelong * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,,,,,,,1,,,,,,
WALK - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,1,,,,,,
WALK - Topology,@c_topology_walk * df.trip_topology,,,,,,,1,,,,,,
#Bike,,,,,,,,,,,,,,
BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,,,,-999,,,,,
BIKE - Time up to 6 miles,@c_biketimeshort * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,,,,,,,,1,,,,,
BIKE - Time beyond 6 of a miles,@c_biketimelong * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,,,,,,,,1,,,,,
BIKE - Destination zone densityIndex,@c_density_index*df.density_index,,,,,,,,1,,,,,
BIKE - Topology,@c_topology_bike * df.trip_topology,,,,,,,,1,,,,,
#,Walk to Local,,,,,,,,,,,,,
#WALK_TRANSIT - Unavailable,walk_local_available == False,,,,,,,,,-999,,,,
WALK_TRANSIT - Path logsums,@tvpb_logsum_odt['WTW'],,,,,,,,,1,,,,
WALK_TRANSIT - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,1,,,,
WALK_TRANSIT - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,1,,,,
WALK_TRANSIT - Person is less than 10 years old,@c_age010_trn*(df.age <= 10),,,,,,,,,1,,,,
#,Drive to Local,,,,,,,,,,,,,
#DRIVE_TRANSIT - Unavailable,drive_local_available == False,,,,,,,,,,-999,,,
DRIVE_TRANSIT - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,-999,,,
DRIVE_TRANSIT - Unavailable for persons less than 16,age < 16,,,,,,,,,,-999,,,
DRIVE_TRANSIT - Path logsums,@tvpb_logsum_odt['DTW'],,,,,,,,,,1,,,
DRIVE_TRANSIT - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,,,,1,,,
DRIVE_TRANSIT - Topology,@c_topology_trn * df.trip_topology,,,,,,,,,,1,,,
DRIVE_TRANSIT - Person is less than 10 years old,@c_age010_trn*(df.age < 10),,,,,,,,,,1,,,
#Taxi,,,,,,,,,,,,,,
Taxi - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'],,,,,,,,,,,1,,
Taxi - Wait time,@c_ivt * 1.5 * df.origTaxiWaitTime,,,,,,,,,,,1,,
Taxi - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,1,,
Taxi - Bridge toll,@df.c_cost * odt_skims['HOV2TOLL_BTOLL'],,,,,,,,,,,1,,
Taxi - Fare,@df.c_cost * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,,,,,,,,,,,1,,
#TNC Single,,,,,,,,,,,,,,
TNC Single - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'] ,,,,,,,,,,,,1,
TNC Single - Wait time,@c_ivt * 1.5 * df.origSingleTNCWaitTime,,,,,,,,,,,,1,
TNC Single - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,,1,
TNC Single - Bridge toll,@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,1,
TNC Single - Cost,"@df.c_cost * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",,,,,,,,,,,,1,
#TNC Shared,,,,,,,,,,,,,,
TNC Shared - In-vehicle time,@c_ivt * odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,,,,,,,,,,,,,1
TNC Shared - Wait time,@c_ivt  * 1.5 * df.origSharedTNCWaitTime,,,,,,,,,,,,,1
TNC Shared - Tolls,@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],,,,,,,,,,,,,1
TNC Shared - Bridge toll,@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,,,1
TNC Shared - Cost,"@df.c_cost * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",,,,,,,,,,,,,1
#,,,,,,,,,,,,,,
Auto tour mode availability,tour_mode_is_auto,,,,,,,,-999,-999,-999,,,
Walk tour mode availability,tour_mode_is_walk,-999,-999,-999,-999,-999,-999,,-999,-999,-999,,,
Bike tour mode availability,tour_mode_is_bike,-999,-999,-999,-999,-999,-999,,,-999,-999,,,
Walk to Transit tour mode availability,tour_mode_is_walk_transit,-999,-999,,,,,,-999,,,,,
Drive to Transit tour modes availability,tour_mode_is_drive_transit,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,,,
Ride hail tour modes availability,tour_mode_is_ride_hail,-999,-999,,,,,,-999,,,,,
#indiv tour ASCs,,,,,,,,,,,,,,
Drive Alone tour mode ASC -- shared ride 2,@sov_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,1,1,,,,,,,,,
Drive Alone tour mode ASC -- shared ride 3+,@sov_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,1,1,,,,,,,
Drive Alone tour mode ASC -- walk,@sov_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,,,1,,,,,,
Drive Alone tour mode ASC -- ride hail,@sov_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),,,,,,,,,,,1,1,1
Shared Ride 2 tour mode ASC -- shared ride 2,@sr2_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,1,1,,,,,,,,,
Shared Ride 2 tour mode ASC -- shared ride 3+,@sr2_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,1,1,,,,,,,
Shared Ride 2 tour mode ASC -- walk,@sr2_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,,,1,,,,,,
Shared Ride 2 tour mode ASC -- ride hail,@sr2_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),,,,,,,,,,,1,1,1
Shared Ride 3+ tour mode ASC -- shared ride 2,@sr3p_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,1,1,,,,,,,,,
Shared Ride 3+ tour mode ASC -- shared ride 3+,@sr3p_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,1,1,,,,,,,
Shared Ride 3+ tour mode ASC -- walk,@sr3p_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,,,1,,,,,,
Shared Ride 3+ tour mode ASC -- ride hail,@sr3p_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),,,,,,,,,,,1,1,1
Walk tour mode ASC -- ride hail,@walk_ASC_rh * df.is_indiv * (df.i_tour_mode == I_WALK_MODE),,,,,,,,,,,1,1,1
Bike tour mode ASC -- walk,@bike_ASC_walk * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),,,,,,,1,,,,,,
Bike tour mode ASC -- ride hail,@bike_ASC_rh * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,,1,1,1
#Walk to Transit tour mode ASC -- light rail,@walk_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),,,,,,,,,,1,,,
#Walk to Transit tour mode ASC -- ferry,@walk_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),,,,,,,,,,1,,,
#Walk to Transit tour mode ASC -- express bus,@walk_transit_ASC_express * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#Walk to Transit tour mode ASC -- heavy rail,@walk_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#Walk to Transit tour mode ASC -- commuter rail,@walk_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#Walk to Transit tour mode ASC -- shared ride 2,@walk_transit_ASC_sr2 * (df.is_indiv & df.tour_mode_is_walk_transit),,,1,1,,,,,,,,,
#Walk to Transit tour mode ASC -- shared ride 3+,@walk_transit_ASC_sr3p * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,1,1,,,,,,,
#Walk to Transit tour mode ASC -- walk,@walk_transit_ASC_walk * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,1,,,,,,
#Walk to Transit tour mode ASC -- ride hail,@walk_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_walk_transit),,,,,,,,,,,1,1,1
#Drive to Transit tour mode ASC -- light rail (higher b/c loc d-trn skims differ),@drive_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),,,,,,,,,,,,,
#Drive to Transit tour mode ASC -- ferry,@drive_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),,,,,,,,,,,,,
#Drive to Transit tour mode ASC -- express bus,@drive_transit_ASC_express * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
#Drive to Transit tour mode ASC -- heavy rail,@drive_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
#Drive to Transit tour mode ASC -- commuter rail,@drive_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
#Drive to Transit tour mode ASC -- ride hail,@drive_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_drive_transit),,,,,,,,,,,1,1,1
Ride Hail tour mode ASC -- shared ride 2,@ride_hail_ASC_sr2 * (df.is_indiv & df.tour_mode_is_ride_hail),,,1,1,,,,,,,,,
Ride Hail tour mode ASC -- shared ride 3+,@ride_hail_ASC_sr3p * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,1,1,,,,,,,
Ride Hail tour mode ASC -- walk,@ride_hail_ASC_walk * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,,,1,,,,,,
Ride Hail tour mode ASC -- walk to transit,@ride_hail_ASC_walk_transit * (df.is_indiv & df.tour_mode_is_ride_hail),,,,,,,,,1,1,,,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_taxi * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,1,,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_tnc_single * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,1,
Ride Hail tour mode ASC -- ride hail,@ride_hail_ASC_tnc_shared * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,1
#joint tour ASCs,,,,,,,,,,,,,,
joint - auto tour mode ASC -- shared ride 2,@joint_auto_ASC_sr2 * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,1,1,,,,,,,,,
joint - auto tour mode ASC -- shared ride 3+,@joint_auto_ASC_sr3p * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,1,1,,,,,,,
joint - auto tour mode ASC -- walk,@joint_auto_ASC_walk * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),,,,,,,1,,,,,,
joint - auto tour mode ASC -- ride hail,@joint_auto_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,1,1,1
joint - Walk tour mode ASC -- ride hail,@joint_walk_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,1,,,,,,
joint - Bike tour mode ASC -- walk,@joint_bike_ASC_walk * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),,,,,,,1,,,,,,
joint - Bike tour mode ASC -- ride hail,@joint_bike_ASC_rh * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),,,,,,,,,,,1,1,1
#joint - Walk to Transit tour mode ASC -- light rail,@joint_walk_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),,,,,,,,,,1,,,
#joint - Walk to Transit tour mode ASC -- ferry,@joint_walk_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),,,,,,,,,,1,,,
#joint - Walk to Transit tour mode ASC -- express bus,@joint_walk_transit_ASC_express * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#joint - Walk to Transit tour mode ASC -- heavy rail,@joint_walk_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#joint - Walk to Transit tour mode ASC -- commuter rail,@joint_walk_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,,,
#joint - Walk to Transit tour mode ASC -- shared ride 2,@joint_walk_transit_ASC_sr2 * (df.is_joint & df.tour_mode_is_walk_transit),,,1,1,,,,,,,,,
#joint - Walk to Transit tour mode ASC -- shared ride 3+,@joint_walk_transit_ASC_sr3p * (df.is_joint & df.tour_mode_is_walk_transit),,,,,1,1,,,,,,,
joint - Walk to Transit tour mode ASC -- walk,@joint_walk_transit_ASC_walk * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,1,,,,,,
joint - Walk to Transit tour mode ASC -- ride hail,@joint_walk_transit_ASC_rh * (df.is_joint & df.tour_mode_is_walk_transit),,,,,,,,,,,1,1,1
#joint - Drive to Transit tour mode ASC -- light rail (higher b/c loc d-trn skims differ),@joint_drive_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),,,,,,,,,,,,,
#joint - Drive to Transit tour mode ASC -- ferry,@joint_drive_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),,,,,,,,,,,,,
#joint - Drive to Transit tour mode ASC -- express bus,@joint_drive_transit_ASC_express * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
#joint - Drive to Transit tour mode ASC -- heavy rail,@joint_drive_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
#joint - Drive to Transit tour mode ASC -- commuter rail,@joint_drive_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,,,
joint - Drive to Transit tour mode ASC -- ride hail,@joint_drive_transit_ASC_rh * (df.is_joint & df.tour_mode_is_drive_transit),,,,,,,,,,,1,1,1
joint - Ride Hail tour mode ASC -- shared ride 2,@joint_ride_hail_ASC_sr2 * (df.is_joint & df.tour_mode_is_ride_hail),,,1,1,,,,,,,,,
joint - Ride Hail tour mode ASC -- shared ride 3+,@joint_ride_hail_ASC_sr3p * (df.is_joint & df.tour_mode_is_ride_hail),,,,,1,1,,,,,,,
joint - Ride Hail tour mode ASC -- walk,@joint_ride_hail_ASC_walk * (df.is_joint & df.tour_mode_is_ride_hail),,,,,,,1,,,,,,
joint - Ride Hail tour mode ASC -- walk to transit,@joint_ride_hail_ASC_walk_transit * (df.is_joint & df.tour_mode_is_ride_hail),,,,,,,,,1,1,,,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_taxi * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,1,,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_tnc_single * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,1,
joint - Ride Hail tour mode ASC -- ride hail,@joint_ride_hail_ASC_tnc_shared * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),,,,,,,,,,,,,1
#,,,,,,,,,,,,,,
Walk not available for long distances,@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),,,,,,,-999,,,,,,
Bike not available for long distances,@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),,,,,,,,-999,,,,,
Origin density index,@(c_origin_density_index*df.origin_density_index).clip(c_origin_density_index_max) if origin_density_applied else 0,,,,,,,1,1,1,1,,1,1
Walk-express penalty for intermediate stops,@c_walk_express_penalty * ~(df.first_trip | df.first_trip),,,,,,,,,,,,,
TNC shared adjustment,@adjust_tnc_shared,,,,,,,,,,,,,1
