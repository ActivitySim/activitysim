
python scripts/create_2_zone.py

##############################
### 2 zone - MAZ and TAZ
##############################

MAZ <- households.zone_id

land_use.csv
	MAZ	TAZ
0	1	2, ...
1	2	2, ...
2	3	2, ...
3	4	2, ...
4	5	5, ...
5	6	6, ...

### tazs.csv (not sure what this is for?)

taz
  2
  5
  6
  7
  8
  9

### taz - legacy
index TAZ
offset             int64
terminal_time    float64  # occasional small integer (1-5), but mostly blank (only if it has a TAP?
ptype            float64  # parking type at TAP? (rarer than terminal_time, never alone)



### maz2maz - legacy
index None

OMAZ                int64
DMAZ                int64
bike_logsum       float64
bike_time         float64
walk_perceived    float64
walk_actual       float64
walk_gain         float64

### MAZ_to_MAZ_dist_bike and maz_to_maz_dist_walk

like maz2maz but different pairs (fewer for walk than bike)
do we need to support arbitrary number of these?

# tour_mode_choice_annotate_choosers_preprocessor.csv
# FIXME no transit subzones so all zones short walk to transit,,
,_walk_transit_origin,True <- delete
,_walk_transit_destination,True <- delete
,walk_transit_available,_walk_transit_origin & _walk_transit_destination <- replace with df.origin_walk_time > 0
,drive_transit_available,_walk_transit_destination & (df.auto_ownership > 0)  <- delete _walk_transit_destination
,origin_walk_time,shortWalk*60/walkSpeed  <- whichever we have dist or time, compute the other
,destination_walk_time,shortWalk*60/walkSpeed


local
commuter
express
heavyrail
lrf
ferry

access_dist_loc,
access_dist_com,
access_dist_exp,
access_dist_hvy,
access_dist_lrf

df.origin_walk_time <- get this from land use file
df.destination_walk_time <- get this from land use file

util_WALK_LRF_Walk_access_time,WALK_LRF - Walk access time,@2 * wacc_multiplier * df.origin_walk_time,,,,,,,,,,coef_ivt,,,,,,,,,,,
util_WALK_LRF_Walk_egress_time,WALK_LRF - Walk egress time,@2 * wegr_multiplier * df.destination_walk_time,,,,,,,,,,coef_ivt,,,,,,,,,,,

#,Walk,,,,,,,,,,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,,,,,,,,,
util_WALK_Time_up_to_2_miles,WALK - Time up to 2 miles,@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_WALK_Time_beyond_2_of_a_miles,WALK - Time beyond 2 of a miles,@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_WALK_Destination_zone_densityIndex,WALK - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,,,,coef_ivt,,,,,,,,,,,,,,
util_WALK_Topology,WALK - Topology,@coef_topology_walk_multiplier * df.dest_topology,,,,,,,coef_ivt,,,,,,,,,,,,,,
#,Bike,,,,,,,,,,,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,,,,,,,,,,,
util_BIKE_Unavailable_if_didn't_bike_to_work,BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,,,,-999,,,,,,,,,,,,,
util_BIKE_Time_up_to_6_miles,BIKE - Time up to 6 miles,@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_BIKE_Time_beyond_6_of_a_miles,BIKE - Time beyond 6 of a miles,@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_BIKE_Destination_zone_densityIndex,BIKE - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,,,,,coef_ivt,,,,,,,,,,,,,
util_BIKE_Topology,BIKE - Topology,@coef_topology_bike_multiplier * df.dest_topology,,,,,,,,coef_ivt,,,,,,,,,,,,,


##############################
### 3 zone - MAZ and TAZ and TAP
##############################

TAP
TAZ
MAZ  <- households

tap index TAP
tap
offset        int64
Lot_id      float64
ptype       float64
TAZ           int64
capacity    float64
distance    float64
mode        float64
MAZ           int64
LOTMAZ        int64
LOTTAZ      float64

maz2tap index None columns ['Unnamed: 0' 'TAP' 'drive_time' 'drive_distance' 'drive_mode' 'MAZ'
 'walk_boardingPerceived' 'walk_boardingActual' 'walk_alightingPerceived'
 'walk_alightingActual' 'walk_boardingGain' 'walk_alightingGain']

