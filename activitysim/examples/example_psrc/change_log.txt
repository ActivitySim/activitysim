###
##### atwork_subtour_destination.csv
##### atwork_subtour_destination_sample.csv
###

# util_size_variable_atwork,Size variable atwork,"@df['atwork'].apply(np.log1p)",coef_size_variable_atwork
# util_no_attractions_atwork_size_variable_is_0,"No attractions, atwork size variable is 0",atwork==0,coef_no_attractions_atwork_size_variable_is_0
util_size_variable_atwork,atwork size_term variable,"@df['size_term'].apply(np.log1p)",coef_size_variable_atwork
util_no_attractions_atwork_size_variable_is_0,"No attractions, atwork size_term variable is 0",size_term==0,coef_no_attractions_atwork_size_variable_is_0

###
##### atwork_subtour_destination.yaml
###

SIZE_TERM_SELECTOR: atwork

SEGMENTS:
  - atwork

ORIG_ZONE_ID: workplace_zone_id

###
##### cdap.yaml
###

PERSON_TYPE_MAP:
  WORKER:
    - 1
    - 2
  CHILD:
    - 6
    - 7
    - 8


###
##### trip_destination.csv
##### trip_destination_sample.csv
###
### more appropriate name since they aren't TAZs

# size term,"@np.log1p(size_terms.get(df.dest_taz, df.purpose))",1,1,1,1,1,1,1,1,1,1
# no attractions,"@size_terms.get(df.dest_taz, df.purpose) == 0",-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
size term,"@np.log1p(size_terms.get(df.alt_dest, df.purpose))",1,1,1,1,1,1,1,1,1,1
no attractions,"@size_terms.get(df.alt_dest, df.purpose) == 0",-999,-999,-999,-999,-999,-999,-999,-999,-999,-999

###
##### trip_destination.yaml
###

# ALT_DEST_COL_NAME: dest_taz
ALT_DEST_COL_NAME: alt_dest


###
##### network_los.yaml
###
### not necessary, but speeds up subsequent runs, though the cache in output folder can be large

# read cached skims (using numpy memmap) from output directory (memmap is faster than omx )
read_skim_cache: True
# write memmapped cached skims to output directory after reading from omx, for use in subsequent runs
write_skim_cache: True
