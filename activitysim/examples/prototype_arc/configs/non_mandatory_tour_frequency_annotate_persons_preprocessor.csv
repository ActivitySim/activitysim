Description,Target,Expression
#,,
,max_window,person_max_window(persons)
,log_max_window,np.log1p(max_window)
,medium_low_income,(persons.income_in_thousands > 20) & (persons.income_in_thousands <= 50)
,medium_high_income,(persons.income_in_thousands > 50) & (persons.income_in_thousands <= 100)
,high_income,(persons.income_in_thousands > 100)
,no_cars,(persons.auto_ownership == 0)
,car_sufficiency,persons.auto_ownership-persons.num_workers
,school_kid_at_home,(persons.ptype==7) & (persons.cdap_activity.isin(['H']))
,preschool_kid_at_home,(persons.ptype==8) & (persons.cdap_activity.isin(['H']))
#,,
,_JOINT_TOURS,tours[tours.tour_category=='joint']
,num_hh_joint_tours,"reindex_i(_JOINT_TOURS.groupby('household_id').size(), persons.household_id)"
,num_hh_joint_shop_tours,"reindex_i(_JOINT_TOURS[_JOINT_TOURS.tour_type=='shopping'].groupby('household_id').size(), persons.household_id)"
,num_hh_joint_eatout_tours,"reindex_i(_JOINT_TOURS[_JOINT_TOURS.tour_type=='eatout'].groupby('household_id').size(), persons.household_id)"
,num_hh_joint_maint_tours,"reindex_i(_JOINT_TOURS[_JOINT_TOURS.tour_type=='maint'].groupby('household_id').size(), persons.household_id)"
,num_hh_joint_social_tours,"reindex_i(_JOINT_TOURS[_JOINT_TOURS.tour_type=='social'].groupby('household_id').size(), persons.household_id)"
,num_hh_joint_othdiscr_tours,"reindex_i(_JOINT_TOURS[_JOINT_TOURS.tour_type=='othdiscr'].groupby('household_id').size(), persons.household_id)"
# non_mandatory tour frequency extension,,
,has_mandatory_tour,(persons.num_mand_tours > 0) * 1
,has_joint_tour,(persons.num_joint_tours > 0) * 1
# Presence of person types in households,,
presence of full_time worker other than self in household ,has_full_time,"other_than(persons.household_id, persons.ptype==1)"
presence of part_time worker other than self in household,has_part_time,"other_than(persons.household_id, persons.ptype==2)"
presence of university student other than self in household,has_university,"other_than(persons.household_id, persons.ptype == 3)"
presence of non_worker other than self in household,has_non_worker,"other_than(persons.household_id, persons.ptype == 4)"
presence of retiree other than self in household,has_retiree,"other_than(persons.household_id, persons.ptype == 5)"
presence of driving_kid other than self in household,has_driving_kid,"other_than(persons.household_id, persons.ptype == 6)"
presence of school_kid other than self in household,has_school_kid,"other_than(persons.household_id, persons.ptype == 7)"
presence of preschooler other than self in household,has_preschool_kid,"other_than(persons.household_id, persons.ptype == 8)"
