Description,Target,Expression
Round Trip Tour Distance,tot_tour_dist,"(odt_skims['SOV_DIST'] + dot_skims['SOV_DIST'])"
number of vehicles is greater than the number of drivers,hh_veh_gt_drivers,"np.where(df.auto_ownership > df.num_drivers, 1, 0)"
number of vehicles is less than the number of drivers,hh_veh_lt_drivers,"np.where(df.auto_ownership < df.num_drivers, 1, 0)"
Age of vehicle alternative 1,age_1,"df.veh_num1.astype(str).str.split('_').str[1].fillna(0).astype(int)"
Age of vehicle alternative 2,age_2,"df.veh_num2.astype(str).str.split('_').str[1].fillna(0).astype(int)"
Age of vehicle alternative 3,age_3,"df.veh_num3.astype(str).str.split('_').str[1].fillna(0).astype(int)"
Age of vehicle alternative 4,age_4,"df.veh_num4.astype(str).str.split('_').str[1].fillna(0).astype(int)"
body type of vehicle alternative 1,body_type_1,"df.veh_num1.astype(str).str.split('_').str[0]"
body type of vehicle alternative 2,body_type_2,"df.veh_num2.astype(str).str.split('_').str[0]"
body type of vehicle alternative 3,body_type_3,"df.veh_num3.astype(str).str.split('_').str[0]"
body type of vehicle alternative 4,body_type_4,"df.veh_num4.astype(str).str.split('_').str[0]"
fuel type of vehicle alternative 1,fuel_type_1,"df.veh_num1.astype(str).str.split('_').str[2]"
fuel type of vehicle alternative 2,fuel_type_2,"df.veh_num2.astype(str).str.split('_').str[2]"
fuel type of vehicle alternative 3,fuel_type_3,"df.veh_num3.astype(str).str.split('_').str[2]"
fuel type of vehicle alternative 4,fuel_type_4,"df.veh_num4.astype(str).str.split('_').str[2]"
Range of vehicle alternative 1,Range_1,"reindex(vehicles.groupby('vehicle_type')['Range'].mean(), df.veh_num1)"
Range of vehicle alternative 2,Range_2,"reindex(vehicles.groupby('vehicle_type')['Range'].mean(), df.veh_num2)"
Range of vehicle alternative 3,Range_3,"reindex(vehicles.groupby('vehicle_type')['Range'].mean(), df.veh_num3)"
Range of vehicle alternative 4,Range_4,"reindex(vehicles.groupby('vehicle_type')['Range'].mean(), df.veh_num4)"
