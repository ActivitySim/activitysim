# activitysim workflow example_runner example_name=example_mtc

context_parser: pypyr.parser.keyvaluepairs

on_failure:
- name: activitysim.workflows.steps.py
  in:
    label: FAILURE
    py: |
      print("FAILURE")

steps:

- description: Setting default workflow parameters
  name: pypyr.steps.default
  in:
    defaults:
      example_name: example_mtc
      workspace: workspace
      create: True
      compile: True
      sharrow: True
      legacy: True
      tag:
      resume_after:
      fast: False
      compile_n_households: 1000
      main_n_households: 100000
      config_dirs: configs
      data_dir: data

- name: activitysim.workflows.steps.title
  in:
    label: "[bold blue]activitysim workflow example_runner {example_name}"

- name: activitysim.workflows.steps.py
  in:
    label: Make {workspace} directory if it does not exist
    py: |
      import os
      os.makedirs(f"{workspace}", exist_ok=True)

- activitysim.workflows.steps.make_tag

- name: activitysim.workflows.steps.cmd
  run: '{create}'
  in:
    cmd:
      label: "activitysim create {example_name}"
      run: python -m activitysim create -e {example_name} -d . --link
      cwd: "{workspace}"

- activitysim.workflows.steps.directory_prep

- description: write configs_sh_compile
  name: pypyr.steps.filewriteyaml
  run: '{compile}'
  in:
    fileWriteYaml:
      path: "{workspace}/{example_name}/configs_sh_compile/settings.yaml"
      payload:
        inherit_settings: True
        sharrow: test
        chunk_training_mode: disabled
        households_sample_size: '{compile_n_households}'
        cache_dir: cache

- description: Run activitysim to compile and test sharrow-enabled model
  name: activitysim.workflows.steps.run
  run: '{compile}'
  in:
    pre_config_dirs: configs_sh_compile
    output_dir: 'output-{tag}/output-compile'
    cwd: "{workspace}/{example_name}"
    label: "{example_name} -- sharrow compile"

- description: write configs_sh
  name: pypyr.steps.filewriteyaml
  run: '{sharrow}'
  in:
    fileWriteYaml:
      path: "{workspace}/{example_name}/configs_sh/settings.yaml"
      payload:
        inherit_settings: True
        sharrow: require
        cache_dir: cache
        households_sample_size: '{main_n_households}'

- description: Run activitysim to evaluate sharrow-enabled model
  name: activitysim.workflows.steps.run
  run: '{sharrow}'
  in:
    pre_config_dirs: configs_sh
    output_dir: 'output-{tag}/output-sharrow'
    cwd: "{workspace}/{example_name}"
    label: "{example_name} -- sharrow run"

- description: write.configs_sh
  name: pypyr.steps.filewriteyaml
  run: '{legacy}'
  in:
    fileWriteYaml:
      path: "{workspace}/{example_name}/configs_legacy/settings.yaml"
      payload:
        inherit_settings: True
        recode_pipeline_columns: False
        offset_preprocessing: False
        cache_dir: cache
        households_sample_size: '{main_n_households}'

- description: Run activitysim to evaluate legacy model
  name: activitysim.workflows.steps.run
  run: '{legacy}'
  in:
    pre_config_dirs: configs_legacy
    output_dir: 'output-{tag}/output-output-legacy'
    cwd: "{workspace}/{example_name}"
    label: "{example_name} -- legacy run"

- activitysim.workflows.steps.composite_log
#- activitysim.workflows.steps.contrast_report

- name: pypyr.steps.call
  in:
    call:
      groups: reporting
      success: report-save
      failure: report-save


reporting:

- name: activitysim.workflows.steps.contrast.load_tables
  in:
    common_output_directory: "{workspace}/{example_name}/output-{tag}"
    databases:
      sharrow: "output-sharrow"
      legacy: "output-legacy"
    tables:
      trips:
        filename: final_trips.csv
        index_col: trip_id
      persons:
        filename: final_persons.csv
        index_col: person_id
      land_use:
        filename: final_land_use.csv
        index_col: zone_id

- name: activitysim.workflows.steps.contrast.load_skims
  in:
    common_directory: "{workspace}/{example_name}"

- name: activitysim.workflows.steps.contrast.init_report
  in:
    title: "{example_name} report"
    common_directory: "{workspace}/{example_name}"

- name: activitysim.workflows.steps.contrast.runtime
  in:
    common_output_directory: "{workspace}/{example_name}/output-{tag}"

- name: activitysim.workflows.steps.contrast.trip_mode_choice
  in:
    title: Trip Mode Choice by Primary Purpose
    grouping: primary_purpose

- name: activitysim.workflows.steps.contrast.trip_mode_choice
  in:
    title: Trip Mode Choice by Departure Time
    grouping: depart

report-save:
- name: activitysim.workflows.steps.contrast.save_report
  in:
    html_filename: "{workspace}/{example_name}/output-{tag}/report-{tag}.html"
