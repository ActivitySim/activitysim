Description,Expression,DRIVEALONEFREE,DRIVEALONEPAY,SHARED2FREE,SHARED2PAY,SHARED3FREE,SHARED3PAY,WALK,BIKE,WALK_LOC,WALK_LRF,WALK_EXP,WALK_HVY,WALK_COM,DRIVE_LOC,DRIVE_LRF,DRIVE_EXP,DRIVE_HVY,DRIVE_COM
#Drive alone no toll,,,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - In-vehicle time,@c_ivt*(odt_skims['SOV_TIME'] + dot_skims['SOV_TIME']),1,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Terminal time,@c_walktimeshort * 2 * df.terminal_time,1,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Operating cost ,@df.c_cost * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),1,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Parking cost ,c_cost * daily_parking_cost,1,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Bridge toll ,@df.c_cost * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),1,,,,,,,,,,,,,,,,,
DRIVEALONEFREE - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),1,,,,,,,,,,,,,,,,,
#Drive alone toll,,,,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable,sovtoll_available == False,,-999,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for zero auto households,auto_ownership == 0,,-999,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for persons less than 16,age < 16,,-999,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable for joint tours,is_joint == True,,-999,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,,-999,,,,,,,,,,,,,,,,
DRIVEALONEPAY - In-vehicle time,@c_ivt*(odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME']),,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Terminal time,@c_walktimeshort * 2 * df.terminal_time,,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Operating cost,@df.c_cost * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Parking cost,c_cost * daily_parking_cost,,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Bridge toll,@df.c_cost * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Value toll,@df.c_cost * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),,1,,,,,,,,,,,,,,,,
DRIVEALONEPAY - Person is between 16 and 19 years old,@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),,1,,,,,,,,,,,,,,,,
#Shared ride 2,,,,,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable,hov2_available == False,,,-999,,,,,,,,,,,,,,,
SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,,-999,,,,,,,,,,,,,,,
SHARED2FREE - In-vehicle time,@c_ivt * (odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),,,1,,,,,,,,,,,,,,,
SHARED2FREE - Terminal time,@c_walktimeshort * 2 * df.terminal_time,,,1,,,,,,,,,,,,,,,
SHARED2FREE - Operating cost,@df.c_cost * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),,,1,,,,,,,,,,,,,,,
SHARED2FREE - Parking cost,@df.c_cost * df.daily_parking_cost / costShareSr2,,,1,,,,,,,,,,,,,,,
SHARED2FREE - Bridge toll,@df.c_cost * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,,,1,,,,,,,,,,,,,,,
SHARED2FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,1,,,,,,,,,,,,,,,
SHARED2FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,1,,,,,,,,,,,,,,,
SHARED2FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,1,,,,,,,,,,,,,,,
#Shared ride 2 toll,,,,,,,,,,,,,,,,,,,
SHARED2PAY - Unavailable,hov2toll_available == False,,,,-999,,,,,,,,,,,,,,
SHARED2PAY - Unavailable based on party size,is_joint & (number_of_participants > 2),,,,-999,,,,,,,,,,,,,,
SHARED2PAY - In-vehicle time,@c_ivt * (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,1,,,,,,,,,,,,,,
SHARED2PAY - Terminal time,@c_walktimeshort * 2 * df.terminal_time,,,,1,,,,,,,,,,,,,,
SHARED2PAY - Operating cost,@df.c_cost * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),,,,1,,,,,,,,,,,,,,
SHARED2PAY - Parking cost,@df.c_cost * df.daily_parking_cost / costShareSr2,,,,1,,,,,,,,,,,,,,
SHARED2PAY - Bridge toll,@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,,,,1,,,,,,,,,,,,,,
SHARED2PAY - Value toll,@df.c_cost * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,,,,1,,,,,,,,,,,,,,
SHARED2PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,1,,,,,,,,,,,,,,
SHARED2PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,1,,,,,,,,,,,,,,
SHARED2PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,1,,,,,,,,,,,,,,
#Shared ride 3+,,,,,,,,,,,,,,,,,,,
SHARED3FREE - Unavailable,hov3_available == False,,,,,-999,,,,,,,,,,,,,
SHARED3FREE - In-vehicle time,@c_ivt * (odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),,,,,1,,,,,,,,,,,,,
SHARED3FREE - Terminal time,@c_walktimeshort * 2 * df.terminal_time,,,,,1,,,,,,,,,,,,,
SHARED3FREE - Operating cost,@df.c_cost * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),,,,,1,,,,,,,,,,,,,
SHARED3FREE - Parking cost,@df.c_cost *  df.daily_parking_cost / costShareSr3,,,,,1,,,,,,,,,,,,,
SHARED3FREE - Bridge toll,@df.c_cost * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,,,,,1,,,,,,,,,,,,,
SHARED3FREE - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,1,,,,,,,,,,,,,
SHARED3FREE - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,1,,,,,,,,,,,,,
SHARED3FREE - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,1,,,,,,,,,,,,,
#Shared ride 3+ toll,,,,,,,,,,,,,,,,,,,
SHARED3PAY - Unavailable,hov3toll_available == False,,,,,,-999,,,,,,,,,,,,
SHARED3PAY - In-vehicle time,@c_ivt * (odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),,,,,,1,,,,,,,,,,,,
SHARED3PAY - Terminal time,@c_walktimeshort * 2 * df.terminal_time,,,,,,1,,,,,,,,,,,,
SHARED3PAY - Operating cost,@df.c_cost * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),,,,,,1,,,,,,,,,,,,
SHARED3PAY - Parking cost,@df.c_cost * df.daily_parking_cost / costShareSr3,,,,,,1,,,,,,,,,,,,
SHARED3PAY - Bridge toll,@df.c_cost * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,,,,,,1,,,,,,,,,,,,
SHARED3PAY - Value toll,@df.c_cost * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,,,,,,1,,,,,,,,,,,,
SHARED3PAY - One person household,@c_hhsize1_sr * (df.hhsize == 1),,,,,,1,,,,,,,,,,,,
SHARED3PAY - Two person household,@c_hhsize2_sr * (df.hhsize == 2),,,,,,1,,,,,,,,,,,,
SHARED3PAY - Person is 16 years old or older,@c_age16p_sr * (df.age >= 16),,,,,,1,,,,,,,,,,,,
#Walk,,,,,,,,,,,,,,,,,,,
#FIXME - skims aren't symmetrical, so we have to make sure they can get back,,,,,,,,,,,,,,,,,,
WALK - Time up to 2 miles,@c_walktimeshort * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,,,,,,,1,,,,,,,,,,,
WALK - Time beyond 2 of a miles,@c_walktimelong * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,,,,,,,1,,,,,,,,,,,
WALK - Destination zone densityIndex,@c_density_index * df.density_index,,,,,,,1,,,,,,,,,,,
WALK - Topology,@c_topology_walk * df.dest_topology,,,,,,,1,,,,,,,,,,,
#Bike,,,,,,,,,,,,,,,,,,,
#FIXME - skims aren't symmetrical, so we have to make sure they can get back,,,,,,,,,,,,,,,,,,
BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,,,,-999,,,,,,,,,,
BIKE - Time up to 6 miles,@c_biketimeshort * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,,,,1,,,,,,,,,,
BIKE - Time beyond 6 of a miles,@c_biketimelong * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,,,,1,,,,,,,,,,
BIKE - Destination zone densityIndex,@c_density_index*df.density_index,,,,,,,,1,,,,,,,,,,
BIKE - Topology,@c_topology_bike * df.dest_topology,,,,,,,,1,,,,,,,,,,
#Walk to Local,,,,,,,,,,,,,,,,,,,
WALK_LOC - Unavailable,walk_local_available == False,,,,,,,,,-999,,,,,,,,,
WALK_LOC - In-vehicle time,@c_ivt * (odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),,,,,,,,,1,,,,,,,,,
WALK_LOC - Short iwait time,@c_short_i_wait * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,1,,,,,,,,,
WALK_LOC - Long iwait time,@c_long_i_wait * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,1,,,,,,,,,
WALK_LOC - transfer wait time,@c_xwait * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),,,,,,,,,1,,,,,,,,,
WALK_LOC - number of transfers,@c_xfers_wlk * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),,,,,,,,,1,,,,,,,,,
WALK_LOC - Walk access time,@c_wacc * 2 * df.origin_walk_time,,,,,,,,,1,,,,,,,,,
WALK_LOC - Walk egress time,@c_wegr * 2 * df.destination_walk_time,,,,,,,,,1,,,,,,,,,
WALK_LOC - Walk other time,@c_waux * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),,,,,,,,,1,,,,,,,,,
WALK_LOC - Fare,@df.c_cost * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),,,,,,,,,1,,,,,,,,,
WALK_LOC - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,1,,,,,,,,,
WALK_LOC - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,1,,,,,,,,,
WALK_LOC - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,1,,,,,,,,,
#Walk to Light rail/Ferry,,,,,,,,,,,,,,,,,,,
WALK_LRF - Unavailable,walk_lrf_available == False,,,,,,,,,,-999,,,,,,,,
WALK_LRF - In-vehicle time,@c_ivt * (odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),,,,,,,,,,1,,,,,,,,
WALK_LRF - In-vehicle time on Light Rail (incremental w/ ivt),@(c_ivt_lrt-c_ivt) * (odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),,,,,,,,,,1,,,,,,,,
WALK_LRF - In-vehicle time on Ferry (incremental w/keyivt),@(c_ivt_ferry-c_ivt_lrt) * (odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),,,,,,,,,,1,,,,,,,,
WALK_LRF - Short iwait time,@c_short_i_wait * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,1,,,,,,,,
WALK_LRF - Long iwait time,@c_long_i_wait * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,1,,,,,,,,
WALK_LRF - transfer wait time,@c_xwait * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),,,,,,,,,,1,,,,,,,,
WALK_LRF - number of transfers,@c_xfers_wlk * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),,,,,,,,,,1,,,,,,,,
WALK_LRF - Walk access time,@c_wacc * 2 * df.origin_walk_time,,,,,,,,,,1,,,,,,,,
WALK_LRF - Walk egress time,@c_wegr * 2 * df.destination_walk_time,,,,,,,,,,1,,,,,,,,
WALK_LRF - Walk other time,@c_waux * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),,,,,,,,,,1,,,,,,,,
WALK_LRF - Fare,@df.c_cost * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),,,,,,,,,,1,,,,,,,,
WALK_LRF - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,1,,,,,,,,
WALK_LRF - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,1,,,,,,,,
WALK_LRF - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,1,,,,,,,,
#Walk to Express bus,,,,,,,,,,,,,,,,,,,
WALK_EXP - Unavailable,walk_express_available == False,,,,,,,,,,,-999,,,,,,,
WALK_EXP - In-vehicle time,@c_ivt * (odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),,,,,,,,,,,1,,,,,,,
WALK_EXP - In-vehicle time on Express bus (incremental w/ ivt),@(c_ivt_exp-c_ivt) * (odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),,,,,,,,,,,1,,,,,,,
WALK_EXP - Short iwait time,@c_short_i_wait * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,1,,,,,,,
WALK_EXP - Long iwait time,@c_long_i_wait * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,1,,,,,,,
WALK_EXP - transfer wait time,@c_xwait * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),,,,,,,,,,,1,,,,,,,
WALK_EXP - number of transfers,@c_xfers_wlk * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,1,,,,,,,
WALK_EXP - Walk access time,@c_wacc * 2 * df.origin_walk_time,,,,,,,,,,,1,,,,,,,
WALK_EXP - Walk egress time,@c_wegr * 2 * df.destination_walk_time,,,,,,,,,,,1,,,,,,,
WALK_EXP - Walk other time,@c_waux * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),,,,,,,,,,,1,,,,,,,
WALK_EXP - Fare,@df.c_cost * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),,,,,,,,,,,1,,,,,,,
WALK_EXP - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,1,,,,,,,
WALK_EXP - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,1,,,,,,,
WALK_EXP - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,,1,,,,,,,
#Walk to Heavy Rail,,,,,,,,,,,,,,,,,,,
WALK_HVY - Unavailable,walk_heavyrail_available == False,,,,,,,,,,,,-999,,,,,,
WALK_HVY - In-vehicle time,@c_ivt * (odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),,,,,,,,,,,,1,,,,,,
WALK_HVY - In-vehicle time on heavy rail (incremental w/ ivt),@(c_ivt_hvy-c_ivt) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),,,,,,,,,,,,1,,,,,,
WALK_HVY - Short iwait time,@c_short_i_wait * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,1,,,,,,
WALK_HVY - Long iwait time,@c_long_i_wait * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,1,,,,,,
WALK_HVY - transfer wait time,@c_xwait * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),,,,,,,,,,,,1,,,,,,
WALK_HVY - number of transfers,@c_xfers_wlk * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,,1,,,,,,
WALK_HVY - Walk access time,@c_wacc * 2 * df.origin_walk_time,,,,,,,,,,,,1,,,,,,
WALK_HVY - Walk egress time,@c_wegr * 2 *df.destination_walk_time,,,,,,,,,,,,1,,,,,,
WALK_HVY - Walk other time,@c_waux * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),,,,,,,,,,,,1,,,,,,
WALK_HVY - Fare,@df.c_cost * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),,,,,,,,,,,,1,,,,,,
WALK_HVY - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,1,,,,,,
WALK_HVY - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,1,,,,,,
WALK_HVY - Person is less than 10 years old,@c_age010_trn * (df.age <= 10),,,,,,,,,,,,1,,,,,,
#Walk to Commuter rail,,,,,,,,,,,,,,,,,,,
WALK_COM - Unavailable,walk_commuter_available == False,,,,,,,,,,,,,-999,,,,,
WALK_COM - In-vehicle time,@c_ivt * (odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),,,,,,,,,,,,,1,,,,,
WALK_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(c_ivt_com-c_ivt) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),,,,,,,,,,,,,1,,,,,
WALK_COM - Short iwait time,@c_short_i_wait * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,1,,,,,
WALK_COM - Long iwait time,@c_long_i_wait * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,1,,,,,
WALK_COM - transfer wait time,@c_xwait * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),,,,,,,,,,,,,1,,,,,
WALK_COM - number of transfers,@c_xfers_wlk * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),,,,,,,,,,,,,1,,,,,
WALK_COM - Walk access time,@c_wacc * 2 * df.origin_walk_time,,,,,,,,,,,,,1,,,,,
WALK_COM - Walk egress time,@c_wegr * 2 * df.destination_walk_time,,,,,,,,,,,,,1,,,,,
WALK_COM - Walk other time,@c_waux * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),,,,,,,,,,,,,1,,,,,
WALK_COM - Fare,@df.c_cost * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),,,,,,,,,,,,,1,,,,,
WALK_COM - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,1,,,,,
WALK_COM - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,1,,,,,
WALK_COM - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,1,,,,,
#Drive to Local,,,,,,,,,,,,,,,,,,,
DRIVE_LOC - Unavailable,drive_local_available == False,,,,,,,,,,,,,,-999,,,,
DRIVE_LOC - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,-999,,,,
DRIVE_LOC - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,-999,,,,
DRIVE_LOC - In-vehicle time,@c_ivt * (odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Short iwait time,@c_short_i_wait * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Long iwait time,@c_long_i_wait * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - transfer wait time,@c_xwait * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - number of transfers,@c_xfers_wlk * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Drive time,@c_dtim * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Walk access time,@c_wacc * df.destination_walk_time,,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Walk egress time (at attraction end),@c_wegr * df.destination_walk_time,,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Walk other time,@c_waux * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Fare and operating cost,@df.c_cost * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Ratio of drive access distance to OD distance,@c_dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,,1,,,,
DRIVE_LOC - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,1,,,,
#Drive to Light Rail/Ferry ,,,,,,,,,,,,,,,,,,,
DRIVE_LRF - Unavailable,drive_lrf_available == False,,,,,,,,,,,,,,,-999,,,
DRIVE_LRF - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,-999,,,
DRIVE_LRF - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,-999,,,
DRIVE_LRF - In-vehicle time,@c_ivt * (odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - In-vehicle time on Light Rail (incremental w/ ivt),@(c_ivt_lrt-c_ivt)*(odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - In-vehicle time on Ferry (incremental w/ keyivt),@(c_ivt_ferry-c_ivt_lrt)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Short iwait time,@c_short_i_wait * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Long iwait time,@c_long_i_wait * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)) ,,,,,,,,,,,,,,,1,,,
DRIVE_LRF - transfer wait time,@c_xwait * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - number of transfers,@c_xfers_drv * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Drive time,@c_dtim * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Walk access time (at attraction end),@c_wacc * df.destination_walk_time,,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Walk egress time (at attraction end),@c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Walk other time,@c_waux * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Fare and operating cost,@df.c_cost * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Ratio of drive access distance to OD distance,@c_dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,,,1,,,
DRIVE_LRF - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,1,,,
#Drive to Express bus,,,,,,,,,,,,,,,,,,,
DRIVE_EXP - Unavailable,drive_express_available == False,,,,,,,,,,,,,,,,-999,,
DRIVE_EXP - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,-999,,
DRIVE_EXP - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,-999,,
DRIVE_EXP - In-vehicle time,@c_ivt * (odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - In-vehicle time on Express bus (incremental w/ ivt),@(c_ivt_exp-c_ivt) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Short iwait time,@c_short_i_wait * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Long iwait time,@c_long_i_wait * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - transfer wait time,@c_xwait * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - number of transfers,@c_xfers_drv * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Drive time,@c_dtim * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Walk access time (at attraction end),@c_wacc * df.destination_walk_time,,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Walk egress ime (at attraction end),@c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Walk other time,@c_waux * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Fare and operating cost,@df.c_cost * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Ratio of drive access distance to OD distance,@c_dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,,,,1,,
DRIVE_EXP - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,1,,
#Drive to Heavy Rail,,,,,,,,,,,,,,,,,,,
DRIVE_HVY - Unavailable,drive_heavyrail_available == False,,,,,,,,,,,,,,,,,-999,
DRIVE_HVY - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,-999,
DRIVE_HVY - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,-999,
DRIVE_HVY - In-vehicle time,@c_ivt * (odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - In-vehicle time on heavy rail (incremental w/ ivt),@(c_ivt_hvy-c_ivt) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Short iwait time,@c_short_i_wait * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Long iwait time,@c_long_i_wait * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - transfer wait time,@c_xwait * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - number of transfers,@c_xfers_drv * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Drive time,@c_dtim * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Walk access time (at attraction end),@c_wacc * df.destination_walk_time,,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Walk egress time (at attraction end),@c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Walk other time,@c_waux * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Fare and operating cost,@df.c_cost * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Ratio of drive access distance to OD distance,@c_dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,,,,,1,
DRIVE_HVY - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,,1,
#Drive to Commuter Rail,,,,,,,,,,,,,,,,,,,
DRIVE_COM - Unavailable,drive_commuter_available == False,,,,,,,,,,,,,,,,,,-999
DRIVE_COM - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,,,,,,,,,-999
DRIVE_COM - Unavailable for persons less than 16,age < 16,,,,,,,,,,,,,,,,,,-999
DRIVE_COM - In-vehicle time,@c_ivt * (odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),,,,,,,,,,,,,,,,,,1
DRIVE_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(c_ivt_com-c_ivt) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Short iwait time,@c_short_i_wait * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Long iwait time,@c_long_i_wait * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),,,,,,,,,,,,,,,,,,1
DRIVE_COM - transfer wait time,@c_xwait * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),,,,,,,,,,,,,,,,,,1
DRIVE_COM - number of transfers,@c_xfers_drv * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Drive time,@c_dtim * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Walk access time (at attraction end),@c_wacc * df.destination_walk_time,,,,,,,,,,,,,,,,,,1
DRIVE_COM - Walk egress time (at attraction end),@c_wegr * df.destination_walk_time,,,,,,,,,,,,,,,,,,1
DRIVE_COM - Walk other time,@c_waux * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Fare and operating cost,@df.c_cost * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Ratio of drive access distance to OD distance,@c_dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),,,,,,,,,,,,,,,,,,1
DRIVE_COM - Destination zone densityIndex,@c_density_index * df.dest_density_index,,,,,,,,,,,,,,,,,,1
DRIVE_COM - Topology,@c_topology_trn * df.dest_topology,,,,,,,,,,,,,,,,,,1
DRIVE_COM - Person is less than 10 years old,@c_age010_trn * (df.age < 10),,,,,,,,,,,,,,,,,,1
#indiv tour ASCs,,,,,,,,,,,,,,,,,,,
Walk ASC - Zero auto,@walk_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,,,,,1,,,,,,,,,,,
Walk ASC - Auto deficient,@walk_ASC_auto_decicient * (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,1,,,,,,,,,,,
Walk ASC - Auto deficient,@walk_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,1,,,,,,,,,,,
Bike ASC - Zero auto,@bike_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,,,,,,1,,,,,,,,,,
Bike ASC - Auto deficient,@bike_ASC_auto_decicient * (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,1,,,,,,,,,,
Bike ASC - Auto deficient,@bike_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,1,,,,,,,,,,
Shared ride 2 ASC - Zero auto,@sr2_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,1,1,,,,,,,,,,,,,,
Shared ride 2 ASC - Auto deficient,@sr2_ASC_auto_decicient * (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,1,1,,,,,,,,,,,,,,
Shared ride 2 ASC - Auto deficient,@sr2_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,1,1,,,,,,,,,,,,,,
Shared ride 3+ - Zero auto,@sr3p_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,,,1,1,,,,,,,,,,,,
Shared ride 3+ - Auto deficient,@sr3p_ASC_auto_decicient *  (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,1,1,,,,,,,,,,,,
Shared ride 3+ - Auto deficient,@sr3p_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,1,1,,,,,,,,,,,,
Walk to Transit - Zero auto,@walk_transit_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,1,1,1,1,1,,,,,
Walk to Transit - Auto deficient,@walk_transit_ASC_auto_decicient *  (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,1,1,1,1,1,,,,,
Walk to Transit - Auto deficient,@walk_transit_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,1,1,1,1,1,,,,,
Drive to Transit - Zero auto,@drive_transit_ASC_no_auto * (df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,,,,1,1,1,1,1
Drive to Transit - Auto deficient,@drive_transit_ASC_auto_decicient *  (df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,1,1,1,1,1
Drive to Transit - Auto deficient,@drive_transit_ASC_auto_sufficient * (df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,1,1,1,1,1
#joint tour ASCs,,,,,,,,,,,,,,,,,,,
Joint - Walk ASC - Zero auto,@joint_walk_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,,,,,1,,,,,,,,,,,
Joint - Walk ASC - Auto deficient,@joint_walk_ASC_auto_decicient * (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,1,,,,,,,,,,,
Joint - Walk ASC - Auto deficient,@joint_walk_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,1,,,,,,,,,,,
Joint - Bike ASC - Zero auto,@joint_bike_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,,,,,,1,,,,,,,,,,
Joint - Bike ASC - Auto deficient,@joint_bike_ASC_auto_decicient * (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,1,,,,,,,,,,
Joint - Bike ASC - Auto deficient,@joint_bike_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,1,,,,,,,,,,
Joint - Shared ride 2 ASC - Zero auto,@joint_sr2_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,1,1,,,,,,,,,,,,,,
Joint - Shared ride 2 ASC - Auto deficient,@joint_sr2_ASC_auto_decicient * (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,1,1,,,,,,,,,,,,,,
Joint - Shared ride 2 ASC - Auto deficient,@joint_sr2_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,1,1,,,,,,,,,,,,,,
Joint - Shared ride 3+ - Zero auto,@joint_sr3p_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,,,1,1,,,,,,,,,,,,
Joint - Shared ride 3+ - Auto deficient,@joint_sr3p_ASC_auto_decicient *  (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,1,1,,,,,,,,,,,,
Joint - Shared ride 3+ - Auto deficient,@joint_sr3p_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,1,1,,,,,,,,,,,,
Joint - Walk to Transit - Zero auto,@joint_walk_transit_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,,,,,,,1,1,1,1,1,,,,,
Joint - Walk to Transit - Auto deficient,@joint_walk_transit_ASC_auto_decicient *  (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,1,1,1,1,1,,,,,
Joint - Walk to Transit - Auto deficient,@joint_walk_transit_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,1,1,1,1,1,,,,,
Joint - Drive to Transit - Zero auto,@joint_drive_transit_ASC_no_auto * (df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,,,,1,1,1,1,1
Joint - Drive to Transit - Auto deficient,@joint_drive_transit_ASC_auto_decicient *  (df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,,,,1,1,1,1,1
Joint - Drive to Transit - Auto deficient,@joint_drive_transit_ASC_auto_sufficient * (df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,,,,1,1,1,1,1
Local bus ASC,@local_bus_ASC,,,,,,,,,1,,,,,1,,,,
Walk to Light Rail ASC,@walk_light_rail_ASC * (df.walk_ferry_available == False),,,,,,,,,,1,,,,,,,,
Drive to Light Rail ASC,@drive_light_rail_ASC * (df.drive_ferry_available == False),,,,,,,,,,,,,,,1,,,
Walk to Ferry ASC,@walk_ferry_ASC * df.walk_ferry_available,,,,,,,,,,1,,,,,,,,
Drive to Ferry ASC,@drive_ferry_ASC * df.drive_ferry_available,,,,,,,,,,,,,,,1,,,
Express Bus ASC,@express_bus_ASC,,,,,,,,,,,1,,,,,1,,
Heavy Rail ASC,@heavy_rail_ASC,,,,,,,,,,,,1,,,,,1,
Commuter Rail,@commuter_rail_ASC,,,,,,,,,,,,,1,,,,,1
Walk to Transit dest CBD,@walk_transit_CBD_ASC * df.destination_in_cbd,,,,,,,,,1,1,1,1,1,,,,,
Drive to Transit dest CBD,@drive_transit_CBD_ASC * df.destination_in_cbd,,,,,,,,,,,,,,1,1,1,1,1
Drive to Transit - distance penalty,@(c_drvtrn_distpen_0*(1-od_skims['DIST']/c_drvtrn_distpen_max)).clip(upper=0),,,,,,,,,,,,,,1,1,1,1,1
# FIXME - skims aren't symmetrical, so we have to make sure they can get back,,,,,,,,,,,,,,,,,,
Walk not available for long distances,@od_skims.max('DISTWALK') > 3,,,,,,,-999,,,,,,,,,,,
Bike not available for long distances,@od_skims.max('DISTBIKE') > 8,,,,,,,,-999,,,,,,,,,,
Drive alone not available for escort tours,is_escort,-999,-999,,,,,,,,,,,,,,,,
