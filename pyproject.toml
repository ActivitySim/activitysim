[build-system]
requires = [
    "setuptools>=69",
    "wheel",
    "setuptools_scm>=8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "activitysim"
dynamic = ["version"]
dependencies = [
    "cytoolz >= 0.8.1",
    "multimethod < 2.0",
    "numba >= 0.57",
    "numpy >= 1.16.1, <1.26",
    "openmatrix >= 0.3.4.1",
    "pandas >= 2",
    "pandera >=0.15, <0.18.1",
    "platformdirs",
    "psutil >= 4.1",
    "pyarrow >= 2.0",
    "pydantic >= 2.6",
    "pypyr >= 5.3",
    "pyyaml >= 5.1",
    "requests >= 2.7",
    "scikit-learn >= 1.2",
    "setuptools>=80.9.0",
    "sharrow >= 2.9.1",
    "sparse",
    "tables >= 3.9",  # pytables is tables in pypi
    "xarray >= 2024.05",
]
readme = "README.md"
requires-python = ">=3.10"

[project.scripts]
activitysim = "activitysim.cli.main:main"
activitysim_checksums = "activitysim.cli.create:display_sha256_checksums"

[tool.setuptools.packages.find]
exclude = [
    "other*", "test*",
    "activitysim/estimation/test*",
    "activitysim/abm/test*",
    "activitysim/cli/test*",
    "activitysim/core/test*",
    "activitysim/abm/models/util/test*",
]

[tool.setuptools_scm]
fallback_version = "999"
write_to = "activitysim/_generated_version.py"

[tool.isort]
profile = "black"
skip_gitignore = true
float_to_top = true
default_section = "THIRDPARTY"
known_first_party = "activitysim"
add_imports = "from __future__ import annotations"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v --nbmake --disable-warnings --ignore=activitysim/estimation/test"
testpaths = [
    "activitysim/abm/test",
    "activitysim/cli/test",
    "activitysim/core/test",
    "activitysim/abm/models/util/test",
]
filterwarnings = [
    "ignore::tables.NaturalNameWarning",
]
log_cli = true
tb = "native"

[tool.ruff]
line-length = 140
exclude = [
    ".git",
    "__pycache__",
    "docs/_build",
    "docs/conf.py",
    "**/__sharrowcache__",
    "other_resources/",
    "sandbox/"
]

[tool.ruff.lint]
select = ["E", "F", "B", "UP", "TID"]

[tool.ruff.lint.isort]
known-first-party = ["activitysim"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]  # Ignore import violations in all `__init__.py` files

[dependency-groups]
dev = [
    "altair",
    "autodoc_pydantic",
    "asv",  # for benchmarking
    "black==22.12.0",
    "bump2version",  # for making a release
    "coveralls>=3.3.1",
    "dask==2023.11",
    "descartes",
    "filelock",
    "fsspec",
    "geopandas",
    "gh",
    "ipykernel",  # so this env will appear in jupyter as a selection
    "isort==5.12.0",
    "jupyter-book",
    "jupyterlab",
    "larch>=6.0.42",
    "matplotlib",
    "myst-nb",
    "myst-parser",  # allows markdown in sphinx
    "nbconvert",
    "nbformat",
    "nbmake==1.4.6",
    "numexpr",
    "numpydoc",
    "pre-commit",
    "pycodestyle",
    "pydata-sphinx-theme",
    "pydot>=4.0.1",
    "pyinstrument==4.4",
    "pytest==7.2",
    "pytest-cov",
    "pytest-regressions",
    "requests>=2.32.3",
    "rich==13.3",
    "ruby",  # for benchmarking pre-commit hooks
    "ruff",
    "setuptools_scm",
    "simwrapper > 1.7",
    "snakeviz",  # for profiling
    "sphinx==6.1",
    "sphinx-argparse",
    "sphinx-autosummary-accessors",
    "sphinx-copybutton",
    "sphinx-remove-toctrees",
    "sphinx_rtd_theme==1.2",
    "sphinx-argparse==0.4",
    "xlsxwriter==3.2.5",
    "xmle",
    "zarr>=2,<3",
    "zstandard"
]

[tool.uv]
default-groups = ["dev"]
